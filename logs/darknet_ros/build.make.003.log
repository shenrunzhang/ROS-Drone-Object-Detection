[  0%] Built target darknet_ros_msgs_generate_messages_cpp
[  1%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_maxpool_layer_kernels.cu.o[0m
[  2%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_activation_kernels.cu.o[0m
[  3%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_crop_layer_kernels.cu.o[0m
[  5%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_avgpool_layer_kernels.cu.o[0m
[  6%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_deconvolutional_kernels.cu.o[0m
[  7%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_blas_kernels.cu.o[0m
[  8%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_dropout_layer_kernels.cu.o[0m
[ 10%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_col2im_kernels.cu.o[0m
[ 11%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_im2col_kernels.cu.o[0m
[ 12%] [34m[1mBuilding NVCC (Device) object CMakeFiles/darknet_ros_lib.dir/__/darknet/src/darknet_ros_lib_generated_convolutional_kernels.cu.o[0m
[35m[1mScanning dependencies of target darknet_ros_lib[0m
[ 13%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/src/YoloObjectDetector.cpp.o[0m
[ 15%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/src/image_interface.cpp.o[0m
[ 16%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:[m[K In function â€˜[01m[Kimage** load_alphabet_with_file(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:20:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   20 |   image **alphabets = [01;35m[Kcalloc(nsize, sizeof(image))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:21:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   21 |   char* labels = [01;35m[K"/labels/%d_%d.png"[m[K;
      |                  [01;35m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet_ros/src/image_interface.cpp:26:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   26 |     alphabets[j] = [01;35m[Kcalloc(128, sizeof(image))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[ 17%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:[m[K In function â€˜[01m[Kchar* get_activation_string(ACTIVATION)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:12:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   12 |             return [01;35m[K"logistic"[m[K;
      |                    [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:14:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   14 |             return [01;35m[K"loggy"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:16:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   16 |             return [01;35m[K"relu"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:18:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   18 |             return [01;35m[K"elu"[m[K;
      |                    [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:20:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   20 |             return [01;35m[K"selu"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:22:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   22 |             return [01;35m[K"relie"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:24:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   24 |             return [01;35m[K"ramp"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:26:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   26 |             return [01;35m[K"linear"[m[K;
      |                    [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:28:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   28 |             return [01;35m[K"tanh"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:30:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   30 |             return [01;35m[K"plse"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:32:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   32 |             return [01;35m[K"leaky"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:34:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   34 |             return [01;35m[K"stair"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:36:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   36 |             return [01;35m[K"hardtan"[m[K;
      |                    [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:38:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   38 |             return [01;35m[K"lhtan"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activations.cpp:42:12:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   42 |     return [01;35m[K"relu"[m[K;
      |            [01;35m[K^~~~~~[m[K
[ 18%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:[m[K In function â€˜[01m[Klayer make_activation_layer(int, int, ACTIVATION)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:14:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   14 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:21:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   21 |     l.output = [01;35m[Kcalloc(batch*inputs, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/activation_layer.cpp:22:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   22 |     l.delta = [01;35m[Kcalloc(batch*inputs, sizeof(float*))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[ 20%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp.o[0m
[ 21%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/blas.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/blas.cpp:[m[K In function â€˜[01m[Kvoid flatten(float*, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/blas.cpp:34:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   34 |     float *swap = [01;35m[Kcalloc(size*layers*batch, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:[m[K In function â€˜[01m[Kavgpool_layer make_avgpool_layer(int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:8:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
    8 |     avgpool_layer l = {[01;35m[K0[m[K};
      |                        [01;35m[K^[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:20:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   20 |     l.output =  [01;35m[Kcalloc(output_size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/avgpool_layer.cpp:21:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   21 |     l.delta =   [01;35m[Kcalloc(output_size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[ 22%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/box.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:[m[K In function â€˜[01m[Klayer make_batchnorm_layer(int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:9:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
    9 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:15:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   15 |     l.output = [01;35m[Kcalloc(h * w * c * batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:16:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   16 |     l.delta  = [01;35m[Kcalloc(h * w * c * batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:20:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   20 |     l.scales = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:21:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   21 |     l.scale_updates = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:22:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   22 |     l.biases = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:23:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   23 |     l.bias_updates = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   29 |     l.mean = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:30:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   30 |     l.variance = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:32:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   32 |     l.rolling_mean = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/batchnorm_layer.cpp:33:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     l.rolling_variance = [01;35m[Kcalloc(c, sizeof(float))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[ 24%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/col2im.cpp.o[0m
[ 25%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp.o[0m
[ 26%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp.o[0m
[ 27%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:[m[K In function â€˜[01m[Klayer make_connected_layer(int, int, int, ACTIVATION, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:17:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   17 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:32:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   32 |     l.output = [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:33:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     l.delta = [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:35:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   35 |     l.weight_updates = [01;35m[Kcalloc(inputs*outputs, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:36:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   36 |     l.bias_updates = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:38:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   38 |     l.weights = [01;35m[Kcalloc(outputs*inputs, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:39:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   39 |     l.biases = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:56:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   56 |         l.m = [01;35m[Kcalloc(l.inputs*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:57:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   57 |         l.v = [01;35m[Kcalloc(l.inputs*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:58:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   58 |         l.bias_m = [01;35m[Kcalloc(l.outputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:59:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   59 |         l.scale_m = [01;35m[Kcalloc(l.outputs, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:60:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   60 |         l.bias_v = [01;35m[Kcalloc(l.outputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:61:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   61 |         l.scale_v = [01;35m[Kcalloc(l.outputs, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:64:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   64 |         l.scales = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:65:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   65 |         l.scale_updates = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:70:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   70 |         l.mean = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:71:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   71 |         l.mean_delta = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:72:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   72 |         l.variance = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:73:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   73 |         l.variance_delta = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:75:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   75 |         l.rolling_mean = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:76:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   76 |         l.rolling_variance = [01;35m[Kcalloc(outputs, sizeof(float))[m[K;
      |                              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                    [01;35m[K|[m[K
      |                                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:78:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   78 |         l.x = [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/connected_layer.cpp:79:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   79 |         l.x_norm = [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:[m[K In function â€˜[01m[Kchar* get_cost_string(COST_TYPE)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:26:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   26 |             return [01;35m[K"seg"[m[K;
      |                    [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:28:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   28 |             return [01;35m[K"sse"[m[K;
      |                    [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:30:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   30 |             return [01;35m[K"masked"[m[K;
      |                    [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:32:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   32 |             return [01;35m[K"smooth"[m[K;
      |                    [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:34:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   34 |             return [01;35m[K"L1"[m[K;
      |                    [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:36:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   36 |             return [01;35m[K"wgan"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:38:12:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   38 |     return [01;35m[K"sse"[m[K;
      |            [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:[m[K In function â€˜[01m[Kcost_layer make_cost_layer(int, int, COST_TYPE, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:44:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   44 |     cost_layer l = {[01;35m[K0[m[K};
      |                     [01;35m[K^[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:52:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   52 |     l.delta = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:53:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   53 |     l.output = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:54:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   54 |     l.cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_cost_layer(cost_layer*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:72:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   72 |     l->delta = [01;35m[Krealloc(l->delta, inputs*l->batch*sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cost_layer.cpp:73:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   73 |     l->output = [01;35m[Krealloc(l->output, inputs*l->batch*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:[m[K In function â€˜[01m[Kconvolutional_layer make_convolutional_layer(int, int, int, int, int, int, int, int, int, ACTIVATION, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:179:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  179 |     convolutional_layer l = {[01;35m[K0[m[K};
      |                              [01;35m[K^[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:195:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  195 |     l.weights = [01;35m[Kcalloc(c/groups*n*size*size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:196:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  196 |     l.weight_updates = [01;35m[Kcalloc(c/groups*n*size*size, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:198:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  198 |     l.biases = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:199:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  199 |     l.bias_updates = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:218:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  218 |     l.output = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:219:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  219 |     l.delta  = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:225:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  225 |         l.binary_weights = [01;35m[Kcalloc(l.nweights, sizeof(float))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:226:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  226 |         l.cweights = [01;35m[Kcalloc(l.nweights, sizeof(char))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:227:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  227 |         l.scales = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:230:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  230 |         l.binary_weights = [01;35m[Kcalloc(l.nweights, sizeof(float))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:231:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  231 |         l.binary_input = [01;35m[Kcalloc(l.inputs*l.batch, sizeof(float))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:235:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  235 |         l.scales = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:236:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  236 |         l.scale_updates = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:241:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  241 |         l.mean = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:242:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  242 |         l.variance = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:244:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  244 |         l.mean_delta = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:245:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  245 |         l.variance_delta = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:247:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  247 |         l.rolling_mean = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:248:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  248 |         l.rolling_variance = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                    [01;35m[K|[m[K
      |                                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:249:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  249 |         l.x = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:250:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  250 |         l.x_norm = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:253:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  253 |         l.m = [01;35m[Kcalloc(l.nweights, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:254:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  254 |         l.v = [01;35m[Kcalloc(l.nweights, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:255:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  255 |         l.bias_m = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:256:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  256 |         l.scale_m = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:257:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  257 |         l.bias_v = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:258:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  258 |         l.scale_v = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_convolutional_layer(convolutional_layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:383:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  383 |     l->output = [01;35m[Krealloc(l->output, l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:384:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  384 |     l->delta  = [01;35m[Krealloc(l->delta,  l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:386:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  386 |         l->x = [01;35m[Krealloc(l->x, l->batch*l->outputs*sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:387:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  387 |         l->x_norm  = [01;35m[Krealloc(l->x_norm, l->batch*l->outputs*sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:[m[K In function â€˜[01m[Kimage* get_weights(convolutional_layer)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/convolutional_layer.cpp:593:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  593 |     image *weights = [01;35m[Kcalloc(l.n, sizeof(image))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[ 29%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp.o[0m
[ 30%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp.o[0m
[ 31%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp.o[0m
[ 32%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:[m[K In function â€˜[01m[Kdim3 cuda_gridsize(size_t)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:59:15:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kx[m[Kâ€™ from â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
   59 |     dim3 d = {[01;35m[Kx[m[K, y, 1};
      |               [01;35m[K^[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:59:18:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Ky[m[Kâ€™ from â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
   59 |     dim3 d = {x, [01;35m[Ky[m[K, 1};
      |                  [01;35m[K^[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:[m[K In function â€˜[01m[Kfloat cuda_compare(float*, float*, size_t, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:122:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  122 |     float *tmp = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:[m[K In function â€˜[01m[Kfloat cuda_mag_array(float*, size_t)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/cuda.cpp:169:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  169 |     float *temp = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[ 34%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:[m[K In function â€˜[01m[Klayer make_crnn_layer(int, int, int, int, int, int, int, ACTIVATION, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:33:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:47:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   47 |     l.state = [01;35m[Kcalloc(l.hidden*batch*(steps+1), sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:49:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   49 |     l.input_layer = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:54:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   54 |     l.self_layer = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crnn_layer.cpp:59:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   59 |     l.output_layer = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:[m[K In function â€˜[01m[Kcrop_layer make_crop_layer(int, int, int, int, int, int, int, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:19:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   19 |     crop_layer l = {[01;35m[K0[m[K};
      |                     [01;35m[K^[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:35:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   35 |     l.output = [01;35m[Kcalloc(l.outputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_crop_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/crop_layer.cpp:59:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   59 |     l->output = [01;35m[Krealloc(l->output, l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[ 35%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/demo.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kchar** get_random_paths(char**, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:44:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   44 |     char **random_paths = [01;35m[Kcalloc(n, sizeof(char*))[m[K;
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kchar** find_replace_paths(char**, int, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:58:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   58 |     char **replace_paths = [01;35m[Kcalloc(n, sizeof(char*))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_image_paths_gray(char**, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:73:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   73 |     X.vals = [01;35m[Kcalloc(X.rows, sizeof(float*))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_image_paths(char**, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:94:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   94 |     X.vals = [01;35m[Kcalloc(X.rows, sizeof(float*))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_image_augment_paths(char**, int, int, int, int, float, float, float, float, float, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:110:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  110 |     X.vals = [01;35m[Kcalloc(X.rows, sizeof(float*))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kbox_label* read_boxes(char*, int*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:147:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kbox_label*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  147 |     box_label *boxes = [01;35m[Kcalloc(size, sizeof(box_label))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:151:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kbox_label*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  151 |             boxes = [01;35m[Krealloc(boxes, size*sizeof(box_label))[m[K;
      |                     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_swag(char*, float*, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:220:24:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  220 |     find_replace(path, [01;35m[K"images"[m[K, "labels", labelpath);
      |                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:220:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  220 |     find_replace(path, "images", [01;35m[K"labels"[m[K, labelpath);
      |                                  [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:221:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  221 |     find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "labels", labelpath);
      |                             [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:221:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  221 |     find_replace(labelpath, "JPEGImages", [01;35m[K"labels"[m[K, labelpath);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:222:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  222 |     find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:222:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  222 |     find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:223:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  223 |     find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:223:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  223 |     find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:224:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  224 |     find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:224:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  224 |     find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_region(char*, float*, int, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:258:24:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  258 |     find_replace(path, [01;35m[K"images"[m[K, "labels", labelpath);
      |                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:258:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  258 |     find_replace(path, "images", [01;35m[K"labels"[m[K, labelpath);
      |                                  [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:259:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  259 |     find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "labels", labelpath);
      |                             [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:259:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  259 |     find_replace(labelpath, "JPEGImages", [01;35m[K"labels"[m[K, labelpath);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:261:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  261 |     find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:261:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  261 |     find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:262:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  262 |     find_replace(labelpath, [01;35m[K".png"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:262:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  262 |     find_replace(labelpath, ".png", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:263:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  263 |     find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:263:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  263 |     find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:264:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  264 |     find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:264:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  264 |     find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kbox bound_image(image)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:14:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kminx[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
  359 |     box b = {[01;35m[Kminx[m[K, miny, maxx-minx + 1, maxy-miny + 1};
      |              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:20:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kminy[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
  359 |     box b = {minx, [01;35m[Kminy[m[K, maxx-minx + 1, maxy-miny + 1};
      |                    [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:36:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K((maxx - minx) + 1)[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
  359 |     box b = {minx, miny, [01;35m[Kmaxx-minx + 1[m[K, maxy-miny + 1};
      |                          [01;35m[K~~~~~~~~~~^~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:359:51:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K((maxy - miny) + 1)[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
  359 |     box b = {minx, miny, maxx-minx + 1, [01;35m[Kmaxy-miny + 1[m[K};
      |                                         [01;35m[K~~~~~~~~~~^~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_iseg(char*, int, float*, int, int, int, augment_args, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:367:24:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  367 |     find_replace(path, [01;35m[K"images"[m[K, "mask", labelpath);
      |                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:367:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  367 |     find_replace(path, "images", [01;35m[K"mask"[m[K, labelpath);
      |                                  [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:368:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  368 |     find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "mask", labelpath);
      |                             [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:368:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  368 |     find_replace(labelpath, "JPEGImages", [01;35m[K"mask"[m[K, labelpath);
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:369:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  369 |     find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:369:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  369 |     find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:370:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  370 |     find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:370:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  370 |     find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:371:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  371 |     find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:371:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  371 |     find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_mask(char*, int, float*, int, int, int, augment_args, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:405:24:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  405 |     find_replace(path, [01;35m[K"images"[m[K, "mask", labelpath);
      |                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:405:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  405 |     find_replace(path, "images", [01;35m[K"mask"[m[K, labelpath);
      |                                  [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:406:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  406 |     find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "mask", labelpath);
      |                             [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:406:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  406 |     find_replace(labelpath, "JPEGImages", [01;35m[K"mask"[m[K, labelpath);
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:407:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  407 |     find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:407:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  407 |     find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:408:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  408 |     find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:408:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  408 |     find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:409:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  409 |     find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:409:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  409 |     find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_detection(char*, int, float*, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:450:24:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  450 |     find_replace(path, [01;35m[K"images"[m[K, "labels", labelpath);
      |                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:450:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  450 |     find_replace(path, "images", [01;35m[K"labels"[m[K, labelpath);
      |                                  [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:451:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  451 |     find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "labels", labelpath);
      |                             [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:451:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  451 |     find_replace(labelpath, "JPEGImages", [01;35m[K"labels"[m[K, labelpath);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:453:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  453 |     find_replace(labelpath, [01;35m[K"raw"[m[K, "labels", labelpath);
      |                             [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:453:36:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  453 |     find_replace(labelpath, "raw", [01;35m[K"labels"[m[K, labelpath);
      |                                    [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:454:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  454 |     find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:454:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  454 |     find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:455:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  455 |     find_replace(labelpath, [01;35m[K".png"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:455:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  455 |     find_replace(labelpath, ".png", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:456:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  456 |     find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:456:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  456 |     find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:457:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  457 |     find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:457:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  457 |     find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid fill_truth_captcha(char*, int, float*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:506:18:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  506 |     for(i = 0; [01;35m[Ki < strlen(begin)[m[K && i < n && begin[i] != '.'; ++i){
      |                [01;35m[K~~^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_regression_labels_paths(char**, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:596:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  596 |         find_replace(paths[i], [01;35m[K"images"[m[K, "labels", labelpath);
      |                                [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:596:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  596 |         find_replace(paths[i], "images", [01;35m[K"labels"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:597:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  597 |         find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "labels", labelpath);
      |                                 [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:597:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  597 |         find_replace(labelpath, "JPEGImages", [01;35m[K"labels"[m[K, labelpath);
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:598:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  598 |         find_replace(labelpath, [01;35m[K".BMP"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:598:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  598 |         find_replace(labelpath, ".BMP", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:599:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  599 |         find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:599:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  599 |         find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:600:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  600 |         find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:600:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  600 |         find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:601:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  601 |         find_replace(labelpath, [01;35m[K".JPeG"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:601:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  601 |         find_replace(labelpath, ".JPeG", [01;35m[K".txt"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:602:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  602 |         find_replace(labelpath, [01;35m[K".Jpeg"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:602:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  602 |         find_replace(labelpath, ".Jpeg", [01;35m[K".txt"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:603:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  603 |         find_replace(labelpath, [01;35m[K".PNG"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:603:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  603 |         find_replace(labelpath, ".PNG", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:604:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  604 |         find_replace(labelpath, [01;35m[K".TIF"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:604:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  604 |         find_replace(labelpath, ".TIF", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:605:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  605 |         find_replace(labelpath, [01;35m[K".bmp"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:605:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  605 |         find_replace(labelpath, ".bmp", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:606:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  606 |         find_replace(labelpath, [01;35m[K".jpeg"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:606:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  606 |         find_replace(labelpath, ".jpeg", [01;35m[K".txt"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:607:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  607 |         find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:607:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  607 |         find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:608:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  608 |         find_replace(labelpath, [01;35m[K".png"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:608:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  608 |         find_replace(labelpath, ".png", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:609:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  609 |         find_replace(labelpath, [01;35m[K".tif"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:609:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  609 |         find_replace(labelpath, ".tif", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix load_tags_paths(char**, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:640:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  640 |         find_replace(paths[i], [01;35m[K"images"[m[K, "labels", label);
      |                                [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:640:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  640 |         find_replace(paths[i], "images", [01;35m[K"labels"[m[K, label);
      |                                          [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:641:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  641 |         find_replace(label, [01;35m[K".jpg"[m[K, ".txt", label);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:641:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  641 |         find_replace(label, ".jpg", [01;35m[K".txt"[m[K, label);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kimage get_segmentation_image(char*, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:679:24:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  679 |     find_replace(path, [01;35m[K"images"[m[K, "mask", labelpath);
      |                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:679:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  679 |     find_replace(path, "images", [01;35m[K"mask"[m[K, labelpath);
      |                                  [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:680:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  680 |     find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "mask", labelpath);
      |                             [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:680:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  680 |     find_replace(labelpath, "JPEGImages", [01;35m[K"mask"[m[K, labelpath);
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:681:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  681 |     find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:681:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  681 |     find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:682:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  682 |     find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:682:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  682 |     find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:683:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  683 |     find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:683:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  683 |     find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kimage get_segmentation_image2(char*, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:706:24:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  706 |     find_replace(path, [01;35m[K"images"[m[K, "mask", labelpath);
      |                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:706:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  706 |     find_replace(path, "images", [01;35m[K"mask"[m[K, labelpath);
      |                                  [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:707:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  707 |     find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "mask", labelpath);
      |                             [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:707:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  707 |     find_replace(labelpath, "JPEGImages", [01;35m[K"mask"[m[K, labelpath);
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:708:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  708 |     find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:708:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  708 |     find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:709:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  709 |     find_replace(labelpath, [01;35m[K".JPG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:709:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  709 |     find_replace(labelpath, ".JPG", [01;35m[K".txt"[m[K, labelpath);
      |                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:710:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  710 |     find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:710:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  710 |     find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_seg(int, char**, int, int, int, int, int, int, float, float, float, float, float, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:745:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  745 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:751:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  751 |     d.y.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_iseg(int, char**, int, int, int, int, int, int, int, int, float, float, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:793:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  793 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_mask(int, char**, int, int, int, int, int, int, int, int, float, float, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:833:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  833 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_region(int, char**, int, int, int, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:873:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  873 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_compare(int, char**, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:927:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  927 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:936:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  936 |         d.X.vals[i] = [01;35m[Kcalloc(d.X.cols, sizeof(float))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:945:36:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  945 |         find_replace(paths[i*2],   [01;35m[K"imgs"[m[K, "labels", imlabel1);
      |                                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:945:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  945 |         find_replace(paths[i*2],   "imgs", [01;35m[K"labels"[m[K, imlabel1);
      |                                            [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:946:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  946 |         find_replace(imlabel1, [01;35m[K"jpg"[m[K, "txt", imlabel1);
      |                                [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:946:39:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  946 |         find_replace(imlabel1, "jpg", [01;35m[K"txt"[m[K, imlabel1);
      |                                       [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:953:36:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  953 |         find_replace(paths[i*2+1], [01;35m[K"imgs"[m[K, "labels", imlabel2);
      |                                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:953:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  953 |         find_replace(paths[i*2+1], "imgs", [01;35m[K"labels"[m[K, imlabel2);
      |                                            [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:954:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  954 |         find_replace(imlabel2, [01;35m[K"jpg"[m[K, "txt", imlabel2);
      |                                [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:954:39:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  954 |         find_replace(imlabel2, "jpg", [01;35m[K"txt"[m[K, imlabel2);
      |                                       [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_swag(char**, int, int, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:998:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  998 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_detection(int, char**, int, int, int, int, int, float, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1044:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1044 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kpthread_t load_data_in_thread(load_args)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1138:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kload_args*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1138 |     struct load_args *ptr = [01;35m[Kcalloc(1, sizeof(struct load_args))[m[K;
      |                             [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                   [01;35m[K|[m[K
      |                                   [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid* load_threads(void*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1152:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdata*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1152 |     data *buffers = [01;35m[Kcalloc(args.threads, sizeof(data))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1153:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t*[m[Kâ€™ {aka â€˜[01m[Klong unsigned int*[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
 1153 |     pthread_t *threads = [01;35m[Kcalloc(args.threads, sizeof(pthread_t))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kvoid load_data_blocking(load_args)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1175:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kload_args*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1175 |     struct load_args *ptr = [01;35m[Kcalloc(1, sizeof(struct load_args))[m[K;
      |                             [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                   [01;35m[K|[m[K
      |                                   [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kpthread_t load_data(load_args)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1183:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kload_args*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1183 |     struct load_args *ptr = [01;35m[Kcalloc(1, sizeof(struct load_args))[m[K;
      |                             [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                   [01;35m[K|[m[K
      |                                   [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_writing(char**, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1192:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1192 |     char **replace_paths = find_replace_paths(paths, n, [01;35m[K".png"[m[K, "-label.png");
      |                                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1192:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1192 |     char **replace_paths = find_replace_paths(paths, n, ".png", [01;35m[K"-label.png"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata load_data_super(char**, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1237:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1237 |     d.X.vals = [01;35m[Kcalloc(n, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1241:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1241 |     d.y.vals = [01;35m[Kcalloc(n, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata select_data(data*, int*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1283:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1283 |     d.X.vals = [01;35m[Kcalloc(orig[0].X.rows, sizeof(float *))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1284:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1284 |     d.y.vals = [01;35m[Kcalloc(orig[0].y.rows, sizeof(float *))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata* tile_data(data, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1295:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdata*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1295 |     data *ds = [01;35m[Kcalloc(divs*divs, sizeof(data))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1305:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1305 |         d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata resize_data(data, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1329:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1329 |     d.X.vals = [01;35m[Kcalloc(d.X.rows, sizeof(float*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kmatrix concat_matrix(matrix, matrix)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1372:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1372 |     m.vals = [01;35m[Kcalloc(m1.rows + m2.rows, sizeof(float*))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata get_random_data(data, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1637:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1637 |     r.X.vals = [01;35m[Kcalloc(num, sizeof(float *))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1638:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1638 |     r.y.vals = [01;35m[Kcalloc(num, sizeof(float *))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:[m[K In function â€˜[01m[Kdata* split_data(data, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1651:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdata*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1651 |     data *split = [01;35m[Kcalloc(2, sizeof(data))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1664:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1664 |     train.X.vals = [01;35m[Kcalloc(train.X.rows, sizeof(float*))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1665:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1665 |     test.X.vals = [01;35m[Kcalloc(test.X.rows, sizeof(float*))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[ 36%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1666:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1666 |     train.y.vals = [01;35m[Kcalloc(train.y.rows, sizeof(float*))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/data.cpp:1667:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1667 |     test.y.vals = [01;35m[Kcalloc(test.y.rows, sizeof(float*))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:[m[K In function â€˜[01m[Klayer make_deconvolutional_layer(int, int, int, int, int, int, int, int, ACTIVATION, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:38:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   38 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:52:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   52 |     l.weights = [01;35m[Kcalloc(c*n*size*size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:53:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   53 |     l.weight_updates = [01;35m[Kcalloc(c*n*size*size, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:55:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   55 |     l.biases = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:56:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   56 |     l.bias_updates = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:75:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   75 |     l.output = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:76:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   76 |     l.delta  = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:85:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   85 |         l.scales = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:86:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   86 |         l.scale_updates = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:91:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   91 |         l.mean = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:92:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   92 |         l.variance = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:94:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   94 |         l.mean_delta = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:95:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   95 |         l.variance_delta = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:97:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   97 |         l.rolling_mean = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:98:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   98 |         l.rolling_variance = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                    [01;35m[K|[m[K
      |                                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:99:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   99 |         l.x = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:100:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  100 |         l.x_norm = [01;35m[Kcalloc(l.batch*l.outputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:103:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  103 |         l.m = [01;35m[Kcalloc(c*n*size*size, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:104:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  104 |         l.v = [01;35m[Kcalloc(c*n*size*size, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:105:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  105 |         l.bias_m = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:106:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  106 |         l.scale_m = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:107:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  107 |         l.bias_v = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:108:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  108 |         l.scale_v = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_deconvolutional_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:193:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  193 |     l->output = [01;35m[Krealloc(l->output, l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:194:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  194 |     l->delta  = [01;35m[Krealloc(l->delta,  l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:196:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  196 |         l->x = [01;35m[Krealloc(l->x, l->batch*l->outputs*sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/deconvolutional_layer.cpp:197:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  197 |         l->x_norm  = [01;35m[Krealloc(l->x_norm, l->batch*l->outputs*sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[ 37%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:[m[K In function â€˜[01m[Kvoid demo(char*, char*, float, int, const char*, char**, int, int, char*, int, float, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:206:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  206 |     predictions = [01;35m[Kcalloc(demo_frame, sizeof(float*))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:208:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  208 |         predictions[i] = [01;35m[Kcalloc(demo_total, sizeof(float))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:210:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  210 |     avg = [01;35m[Kcalloc(demo_total, sizeof(float))[m[K;
      |           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                 [01;35m[K|[m[K
      |                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/demo.cpp:230:21:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  230 |         make_window([01;35m[K"Demo"[m[K, 1352, 1013, fullscreen);
      |                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:[m[K In function â€˜[01m[Kdetection_layer make_detection_layer(int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:16:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   16 |     detection_layer l = {[01;35m[K0[m[K};
      |                          [01;35m[K^[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   29 |     l.cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:32:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   32 |     l.output = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:33:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     l.delta = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:[m[K In function â€˜[01m[Kvoid forward_detection_layer(detection_layer, network)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/detection_layer.cpp:186:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  186 |             float *costs = [01;35m[Kcalloc(l.batch*locations*l.n, sizeof(float))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[ 39%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp.o[0m
[ 40%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:[m[K In function â€˜[01m[Kfloat* random_matrix(int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:33:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     float *m = [01;35m[Kcalloc(rows*cols, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:[m[K In function â€˜[01m[Kvoid time_gpu(int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:231:31:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[KcudaError_t cudaThreadSynchronize()[m[Kâ€™ is deprecated [[01;35m[K-Wdeprecated-declarations[m[K]
  231 |         cudaThreadSynchronize([01;35m[K)[m[K;
      |                               [01;35m[K^[m[K
In file included from [01m[K/usr/local/cuda/include/channel_descriptor.h:61[m[K,
                 from [01m[K/usr/local/cuda/include/cuda_runtime.h:95[m[K,
                 from [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/include/darknet.h:11[m[K,
                 from [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.h:5[m[K,
                 from [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:2[m[K:
[01m[K/usr/local/cuda/include/cuda_runtime_api.h:1067:57:[m[K [01;36m[Knote: [m[Kdeclared here
 1067 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI [01;36m[KcudaThreadSynchronize[m[K(void);
      |                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:231:31:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[KcudaError_t cudaThreadSynchronize()[m[Kâ€™ is deprecated [[01;35m[K-Wdeprecated-declarations[m[K]
  231 |         cudaThreadSynchronize([01;35m[K)[m[K;
      |                               [01;35m[K^[m[K
In file included from [01m[K/usr/local/cuda/include/channel_descriptor.h:61[m[K,
                 from [01m[K/usr/local/cuda/include/cuda_runtime.h:95[m[K,
                 from [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/include/darknet.h:11[m[K,
                 from [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.h:5[m[K,
                 from [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gemm.cpp:2[m[K:
[01m[K/usr/local/cuda/include/cuda_runtime_api.h:1067:57:[m[K [01;36m[Knote: [m[Kdeclared here
 1067 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI [01;36m[KcudaThreadSynchronize[m[K(void);
      |                                                         [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[ 41%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/im2col.cpp.o[0m
[ 43%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:[m[K In function â€˜[01m[Kdropout_layer make_dropout_layer(int, int, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:9:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
    9 |     dropout_layer l = {[01;35m[K0[m[K};
      |                        [01;35m[K^[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:15:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   15 |     l.rand = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_dropout_layer(dropout_layer*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/dropout_layer.cpp:30:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   30 |     l->rand = [01;35m[Krealloc(l->rand, l->inputs*l->batch*sizeof(float))[m[K;
      |               [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[ 44%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image_opencv.cpp.o[0m
[ 45%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp.o[0m
[ 46%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:[m[K In function â€˜[01m[Klayer make_gru_layer(int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:33:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:39:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   39 |     l.uz = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:44:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   44 |     l.wz = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:49:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   49 |     l.ur = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:54:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   54 |     l.wr = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:61:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   61 |     l.uh = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:66:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   66 |     l.wh = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:75:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   75 |     l.output = [01;35m[Kcalloc(outputs*batch*steps, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:76:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   76 |     l.delta = [01;35m[Kcalloc(outputs*batch*steps, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:77:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   77 |     l.state = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:78:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   78 |     l.prev_state = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:79:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   79 |     l.forgot_state = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:80:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   80 |     l.forgot_delta = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:82:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   82 |     l.r_cpu = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:83:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   83 |     l.z_cpu = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/gru_layer.cpp:84:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   84 |     l.h_cpu = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage** load_alphabet()[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:227:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  227 |     image **alphabets = [01;35m[Kcalloc(nsize, sizeof(image))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:229:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  229 |         alphabets[j] = [01;35m[Kcalloc(128, sizeof(image))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kvoid normalize_image2(image)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:488:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  488 |     float *min = [01;35m[Kcalloc(p.c, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:489:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  489 |     float *max = [01;35m[Kcalloc(p.c, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage copy_image(image)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:523:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  523 |     copy.data = [01;35m[Kcalloc(p.h*p.w*p.c, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kvoid save_image_options(image, const char*, IMTYPE, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:564:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kunsigned char*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  564 |     unsigned char *data = [01;35m[Kcalloc(im.w*im.h*im.c, sizeof(char))[m[K;
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage make_image(int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:617:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  617 |     out.data = [01;35m[Kcalloc(h*w*c, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kimage make_random_image(int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:624:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  624 |     out.data = [01;35m[Kcalloc(h*w*c, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:[m[K In function â€˜[01m[Kvoid composite_3d(char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/image.cpp:773:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  773 |     if(!out) out = [01;35m[K"out"[m[K;
      |                    [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:[m[K In function â€˜[01m[Klayer make_iseg_layer(int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:15:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   15 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:27:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   27 |     l.cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:31:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   31 |     l.delta = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:32:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   32 |     l.output = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:34:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   34 |     l.counts = [01;35m[Kcalloc(90, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:35:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   35 |     l.sums = [01;35m[Kcalloc(90, sizeof(float*))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:39:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   39 |             l.sums[i] = [01;35m[Kcalloc(ids, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_iseg_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:66:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   66 |     l->output = [01;35m[Krealloc(l->output, l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:67:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   67 |     l->delta = [01;35m[Krealloc(l->delta, l->batch*l->outputs*sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:[m[K In function â€˜[01m[Kvoid forward_iseg_layer(layer, network)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/iseg_layer.cpp:130:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  130 |         float *mse = [01;35m[Kcalloc(90, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[ 48%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:[m[K In function â€˜[01m[Klayer make_l2norm_layer(int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:15:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   15 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:20:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   20 |     l.output = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:21:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   21 |     l.scales = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/l2norm_layer.cpp:22:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   22 |     l.delta = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[ 49%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/list.cpp.o[0m
[ 50%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/list.cpp:[m[K In function â€˜[01m[Klist* make_list()[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/list.cpp:7:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klist*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
    7 |  list *l = [01;35m[Kmalloc(sizeof(list))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/list.cpp:[m[K In function â€˜[01m[Kvoid list_insert(list*, void*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/list.cpp:42:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knode*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   42 |  node *new_node = [01;35m[Kmalloc(sizeof(node))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/list.cpp:[m[K In function â€˜[01m[Kvoid** list_to_array(list*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/list.cpp:84:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kvoid**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   84 |     void **a = [01;35m[Kcalloc(l->size, sizeof(void*))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[ 51%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp.o[0m
[ 53%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:[m[K In function â€˜[01m[Klocal_layer make_local_layer(int, int, int, int, int, int, int, int, ACTIVATION)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:29:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   29 |     local_layer l = {[01;35m[K0[m[K};
      |                      [01;35m[K^[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:50:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   50 |     l.weights = [01;35m[Kcalloc(c*n*size*size*locations, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:51:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   51 |     l.weight_updates = [01;35m[Kcalloc(c*n*size*size*locations, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:53:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   53 |     l.biases = [01;35m[Kcalloc(l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:54:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   54 |     l.bias_updates = [01;35m[Kcalloc(l.outputs, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:60:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   60 |     l.output = [01;35m[Kcalloc(l.batch*out_h * out_w * n, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/local_layer.cpp:61:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   61 |     l.delta  = [01;35m[Kcalloc(l.batch*out_h * out_w * n, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:[m[K In function â€˜[01m[Klayer make_logistic_layer(int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:15:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   15 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:20:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   20 |     l.loss = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:21:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   21 |     l.output = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:22:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   22 |     l.delta = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/logistic_layer.cpp:23:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   23 |     l.cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:[m[K In function â€˜[01m[Klayer make_lstm_layer(int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:33:17:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     layer l = { [01;35m[K0[m[K };
      |                 [01;35m[K^[m[K
      |                 [01;35m[K|[m[K
      |                 [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:39:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   39 |     l.uf = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:44:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   44 |     l.ui = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:49:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   49 |     l.ug = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:54:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   54 |     l.uo = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:59:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   59 |     l.wf = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:64:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   64 |     l.wi = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:69:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   69 |     l.wg = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:74:18:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   74 |     l.wo = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |            [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K
      |                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:82:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   82 |     l.output = [01;35m[Kcalloc(outputs*batch*steps, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:83:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   83 |     l.state = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:88:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   88 |     l.prev_state_cpu =  [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:89:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   89 |     l.prev_cell_cpu =   [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:90:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   90 |     l.cell_cpu =        [01;35m[Kcalloc(batch*outputs*steps, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:92:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   92 |     l.f_cpu =           [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:93:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   93 |     l.i_cpu =           [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:94:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   94 |     l.g_cpu =           [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:95:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   95 |     l.o_cpu =           [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:96:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   96 |     l.c_cpu =           [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:97:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   97 |     l.h_cpu =           [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:98:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   98 |     l.temp_cpu =        [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:99:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   99 |     l.temp2_cpu =       [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:100:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  100 |     l.temp3_cpu =       [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:101:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  101 |     l.dc_cpu =          [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/lstm_layer.cpp:102:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  102 |     l.dh_cpu =          [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[ 54%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp.o[0m
[ 55%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kfloat matrix_topk_accuracy(matrix, matrix, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:19:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   19 |     int *indexes = [01;35m[Kcalloc(k, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix resize_matrix(matrix, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:52:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   52 |         m.vals = [01;35m[Krealloc(m.vals, size*sizeof(float*))[m[K;
      |                  [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:54:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   54 |             m.vals[i] = [01;35m[Kcalloc(m.cols, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:60:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   60 |         m.vals = [01;35m[Krealloc(m.vals, size*sizeof(float*))[m[K;
      |                  [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix copy_matrix(matrix)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:82:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   82 |     c.vals = [01;35m[Kcalloc(c.rows, sizeof(float *))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:85:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   85 |         c.vals[i] = [01;35m[Kcalloc(c.cols, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix make_matrix(int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:97:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   97 |     m.vals = [01;35m[Kcalloc(m.rows, sizeof(float *))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:99:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   99 |         m.vals[i] = [01;35m[Kcalloc(m.cols, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix hold_out_matrix(matrix*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:110:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  110 |     h.vals = [01;35m[Kcalloc(h.rows, sizeof(float *))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kfloat* pop_column(matrix*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:121:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  121 |     float *col = [01;35m[Kcalloc(m->rows, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:[m[K In function â€˜[01m[Kmatrix csv_to_matrix(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:145:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  145 |     m.vals = [01;35m[Kcalloc(size, sizeof(float*))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:150:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  150 |             m.vals = [01;35m[Krealloc(m.vals, size*sizeof(float*))[m[K;
      |                      [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/matrix.cpp:156:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  156 |     m.vals = [01;35m[Krealloc(m.vals, n*sizeof(float*))[m[K;
      |              [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[ 56%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp.o[0m
[ 58%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:[m[K In function â€˜[01m[Kmaxpool_layer make_maxpool_layer(int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:23:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   23 |     maxpool_layer l = {[01;35m[K0[m[K};
      |                        [01;35m[K^[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:38:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   38 |     l.indexes = [01;35m[Kcalloc(output_size, sizeof(int))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:39:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   39 |     l.output =  [01;35m[Kcalloc(output_size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:40:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   40 |     l.delta =   [01;35m[Kcalloc(output_size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_maxpool_layer(maxpool_layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:65:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   65 |     l->indexes = [01;35m[Krealloc(l->indexes, output_size * sizeof(int))[m[K;
      |                  [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:66:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   66 |     l->output = [01;35m[Krealloc(l->output, output_size * sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/maxpool_layer.cpp:67:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   67 |     l->delta = [01;35m[Krealloc(l->delta, output_size * sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[ 59%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp.o[0m
[ 60%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:[m[K In function â€˜[01m[Kmetadata get_metadata(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:40:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   40 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:41:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   41 |     if(!name_list) name_list = option_find_str(options, [01;35m[K"labels"[m[K, 0);
      |                                                         [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:47:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   47 |     m.classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                          [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:[m[K In function â€˜[01m[Kvoid option_insert(list*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/option_list.cpp:72:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kkvp*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   72 |     kvp *p = [01;35m[Kmalloc(sizeof(kvp))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[ 62%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kfloat get_current_rate(network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:95:19:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   95 |     if ([01;35m[Kbatch_num < net->burn_in[m[K) return net->learning_rate * pow((float)batch_num / net->burn_in, net->power);
      |         [01;35m[K~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:104:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  104 |                 if([01;35m[Knet->steps[i] > batch_num[m[K) return rate;
      |                    [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kchar* get_layer_string(LAYER_TYPE)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:126:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  126 |             return [01;35m[K"convolutional"[m[K;
      |                    [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:128:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  128 |             return [01;35m[K"activation"[m[K;
      |                    [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:130:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  130 |             return [01;35m[K"local"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:132:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  132 |             return [01;35m[K"deconvolutional"[m[K;
      |                    [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:134:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  134 |             return [01;35m[K"connected"[m[K;
      |                    [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:136:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  136 |             return [01;35m[K"rnn"[m[K;
      |                    [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:138:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  138 |             return [01;35m[K"gru"[m[K;
      |                    [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:140:13:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  140 |      return [01;35m[K"lstm"[m[K;
      |             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:142:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  142 |             return [01;35m[K"crnn"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:144:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  144 |             return [01;35m[K"maxpool"[m[K;
      |                    [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:146:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  146 |             return [01;35m[K"reorg"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:148:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  148 |             return [01;35m[K"avgpool"[m[K;
      |                    [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:150:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  150 |             return [01;35m[K"softmax"[m[K;
      |                    [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:152:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  152 |             return [01;35m[K"detection"[m[K;
      |                    [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:154:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  154 |             return [01;35m[K"region"[m[K;
      |                    [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:156:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  156 |             return [01;35m[K"yolo"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:158:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  158 |             return [01;35m[K"dropout"[m[K;
      |                    [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:160:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  160 |             return [01;35m[K"crop"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:162:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  162 |             return [01;35m[K"cost"[m[K;
      |                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:164:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  164 |             return [01;35m[K"route"[m[K;
      |                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:166:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  166 |             return [01;35m[K"shortcut"[m[K;
      |                    [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:168:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  168 |             return [01;35m[K"normalization"[m[K;
      |                    [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:170:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  170 |             return [01;35m[K"batchnorm"[m[K;
      |                    [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:174:12:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  174 |     return [01;35m[K"none"[m[K;
      |            [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Knetwork* make_network(int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:179:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  179 |     network *net = [01;35m[Kcalloc(1, sizeof(network))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:181:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  181 |     net->layers = [01;35m[Kcalloc(net->n, sizeof(layer))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:182:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ksize_t*[m[Kâ€™ {aka â€˜[01m[Klong unsigned int*[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  182 |     net->seen = [01;35m[Kcalloc(1, sizeof(size_t))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:183:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  183 |     net->t    = [01;35m[Kcalloc(1, sizeof(int))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:184:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  184 |     net->cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kint resize_network(network*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:417:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  417 |     net->input = [01;35m[Kcalloc(net->inputs*net->batch, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:418:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  418 |     net->truth = [01;35m[Kcalloc(net->truths*net->batch, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:430:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  430 |         net->workspace = [01;35m[Kcalloc(1, workspace_size)[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Klayer get_network_detection_layer(network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:449:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  449 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kdetection* make_network_boxes(network*, float, int*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:532:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kdetection*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  532 |     detection *dets = [01;35m[Kcalloc(nboxes, sizeof(detection))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:534:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  534 |         dets[i].prob = [01;35m[Kcalloc(l.classes, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:536:34:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  536 |             dets[i].mask = [01;35m[Kcalloc(l.coords-4, sizeof(float))[m[K;
      |                            [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kmatrix network_predict_data_multi(network*, data, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:596:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  596 |     float *X = [01;35m[Kcalloc(net->batch*test.X.rows, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:[m[K In function â€˜[01m[Kmatrix network_predict_data(network*, data)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/network.cpp:621:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  621 |     float *X = [01;35m[Kcalloc(net->batch*test.X.cols, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:[m[K In function â€˜[01m[Klayer make_normalization_layer(int, int, int, int, int, float, float, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:9:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
    9 |     layer layer = {[01;35m[K0[m[K};
      |                    [01;35m[K^[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:19:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   19 |     layer.output = [01;35m[Kcalloc(h * w * c * batch, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:20:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   20 |     layer.delta = [01;35m[Kcalloc(h * w * c * batch, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:21:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   21 |     layer.squared = [01;35m[Kcalloc(h * w * c * batch, sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:22:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   22 |     layer.norms = [01;35m[Kcalloc(h * w * c * batch, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_normalization_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:50:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   50 |     layer->output = [01;35m[Krealloc(layer->output, h * w * c * batch * sizeof(float))[m[K;
      |                     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:51:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   51 |     layer->delta = [01;35m[Krealloc(layer->delta, h * w * c * batch * sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:52:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   52 |     layer->squared = [01;35m[Krealloc(layer->squared, h * w * c * batch * sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/normalization_layer.cpp:53:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   53 |     layer->norms = [01;35m[Krealloc(layer->norms, h * w * c * batch * sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[ 63%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp.o[0m
[ 64%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klocal_layer parse_local(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:134:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  134 |     int n = option_find_int(options, [01;35m[K"filters"[m[K,1);
      |                                      [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:135:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  135 |     int size = option_find_int(options, [01;35m[K"size"[m[K,1);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:136:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  136 |     int stride = option_find_int(options, [01;35m[K"stride"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:137:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  137 |     int pad = option_find_int(options, [01;35m[K"pad"[m[K,0);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:138:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  138 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "logistic");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:138:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  138 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"logistic"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_deconvolutional(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:155:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  155 |     int n = option_find_int(options, [01;35m[K"filters"[m[K,1);
      |                                      [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:156:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  156 |     int size = option_find_int(options, [01;35m[K"size"[m[K,1);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:157:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  157 |     int stride = option_find_int(options, [01;35m[K"stride"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:159:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  159 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "logistic");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:159:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  159 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"logistic"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:168:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  168 |     int batch_normalize = option_find_int_quiet(options, [01;35m[K"batch_normalize"[m[K, 0);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:169:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  169 |     int pad = option_find_int_quiet(options, [01;35m[K"pad"[m[K,0);
      |                                              [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:170:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  170 |     int padding = option_find_int_quiet(options, [01;35m[K"padding"[m[K,0);
      |                                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kconvolutional_layer parse_convolutional(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:181:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  181 |     int n = option_find_int(options, [01;35m[K"filters"[m[K,1);
      |                                      [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:182:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  182 |     int size = option_find_int(options, [01;35m[K"size"[m[K,1);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:183:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  183 |     int stride = option_find_int(options, [01;35m[K"stride"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:184:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  184 |     int pad = option_find_int_quiet(options, [01;35m[K"pad"[m[K,0);
      |                                              [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:185:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  185 |     int padding = option_find_int_quiet(options, [01;35m[K"padding"[m[K,0);
      |                                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:186:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  186 |     int groups = option_find_int_quiet(options, [01;35m[K"groups"[m[K, 1);
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:189:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  189 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "logistic");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:189:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  189 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"logistic"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:198:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  198 |     int batch_normalize = option_find_int_quiet(options, [01;35m[K"batch_normalize"[m[K, 0);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:199:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  199 |     int binary = option_find_int_quiet(options, [01;35m[K"binary"[m[K, 0);
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:200:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  200 |     int xnor = option_find_int_quiet(options, [01;35m[K"xnor"[m[K, 0);
      |                                               [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:203:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  203 |     layer.flipped = option_find_int_quiet(options, [01;35m[K"flipped"[m[K, 0);
      |                                                    [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:204:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  204 |     layer.dot = option_find_float_quiet(options, [01;35m[K"dot"[m[K, 0);
      |                                                  [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_crnn(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:211:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  211 |     int output_filters = option_find_int(options, [01;35m[K"output_filters"[m[K,1);
      |                                                   [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:212:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  212 |     int hidden_filters = option_find_int(options, [01;35m[K"hidden_filters"[m[K,1);
      |                                                   [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:213:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  213 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "logistic");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:213:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  213 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"logistic"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:215:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  215 |     int batch_normalize = option_find_int_quiet(options, [01;35m[K"batch_normalize"[m[K, 0);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:219:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  219 |     l.shortcut = option_find_int_quiet(options, [01;35m[K"shortcut"[m[K, 0);
      |                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_rnn(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:226:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  226 |     int output = option_find_int(options, [01;35m[K"output"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:227:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  227 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "logistic");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:227:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  227 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"logistic"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:229:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  229 |     int batch_normalize = option_find_int_quiet(options, [01;35m[K"batch_normalize"[m[K, 0);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:233:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  233 |     l.shortcut = option_find_int_quiet(options, [01;35m[K"shortcut"[m[K, 0);
      |                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_gru(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:240:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  240 |     int output = option_find_int(options, [01;35m[K"output"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:241:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  241 |     int batch_normalize = option_find_int_quiet(options, [01;35m[K"batch_normalize"[m[K, 0);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:244:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  244 |     l.tanh = option_find_int_quiet(options, [01;35m[K"tanh"[m[K, 0);
      |                                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_lstm(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:251:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  251 |     int output = option_find_int(options, [01;35m[K"output"[m[K, 1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:252:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  252 |     int batch_normalize = option_find_int_quiet(options, [01;35m[K"batch_normalize"[m[K, 0);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_connected(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:261:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  261 |     int output = option_find_int(options, [01;35m[K"output"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:262:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  262 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "logistic");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:262:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  262 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"logistic"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:264:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  264 |     int batch_normalize = option_find_int_quiet(options, [01;35m[K"batch_normalize"[m[K, 0);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_softmax(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:272:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  272 |     int groups = option_find_int_quiet(options, [01;35m[K"groups"[m[K,1);
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:274:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  274 |     l.temperature = option_find_float_quiet(options, [01;35m[K"temperature"[m[K, 1);
      |                                                      [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:275:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  275 |     char *tree_file = option_find_str(options, [01;35m[K"tree"[m[K, 0);
      |                                                [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:280:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  280 |     l.spatial = option_find_float_quiet(options, [01;35m[K"spatial"[m[K, 0);
      |                                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:281:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  281 |     l.noloss =  option_find_int_quiet(options, [01;35m[K"noloss"[m[K, 0);
      |                                                [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kint* parse_yolo_mask(char*, int*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:295:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  295 |         mask = [01;35m[Kcalloc(n, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_yolo(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:308:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  308 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 20);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:309:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  309 |     int total = option_find_int(options, [01;35m[K"num"[m[K, 1);
      |                                          [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:312:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  312 |     char *a = option_find_str(options, [01;35m[K"mask"[m[K, 0);
      |                                        [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:317:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  317 |     l.max_boxes = option_find_int_quiet(options, [01;35m[K"max"[m[K,90);
      |                                                  [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:318:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  318 |     l.jitter = option_find_float(options, [01;35m[K"jitter"[m[K, .2);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:320:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  320 |     l.ignore_thresh = option_find_float(options, [01;35m[K"ignore_thresh"[m[K, .5);
      |                                                  [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:321:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  321 |     l.truth_thresh = option_find_float(options, [01;35m[K"truth_thresh"[m[K, 1);
      |                                                 [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:322:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  322 |     l.random = option_find_int_quiet(options, [01;35m[K"random"[m[K, 0);
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:324:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  324 |     char *map_file = option_find_str(options, [01;35m[K"map"[m[K, 0);
      |                                               [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:327:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  327 |     a = option_find_str(options, [01;35m[K"anchors"[m[K, 0);
      |                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_iseg(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:346:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  346 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 20);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:347:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  347 |     int ids = option_find_int(options, [01;35m[K"ids"[m[K, 32);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_region(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:355:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  355 |     int coords = option_find_int(options, [01;35m[K"coords"[m[K, 4);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:356:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  356 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 20);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:357:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  357 |     int num = option_find_int(options, [01;35m[K"num"[m[K, 1);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:362:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  362 |     l.log = option_find_int_quiet(options, [01;35m[K"log"[m[K, 0);
      |                                            [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:363:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  363 |     l.sqrt = option_find_int_quiet(options, [01;35m[K"sqrt"[m[K, 0);
      |                                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:365:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  365 |     l.softmax = option_find_int(options, [01;35m[K"softmax"[m[K, 0);
      |                                          [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:366:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  366 |     l.background = option_find_int_quiet(options, [01;35m[K"background"[m[K, 0);
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:367:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  367 |     l.max_boxes = option_find_int_quiet(options, [01;35m[K"max"[m[K,30);
      |                                                  [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:368:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  368 |     l.jitter = option_find_float(options, [01;35m[K"jitter"[m[K, .2);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:369:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  369 |     l.rescore = option_find_int_quiet(options, [01;35m[K"rescore"[m[K,0);
      |                                                [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:371:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  371 |     l.thresh = option_find_float(options, [01;35m[K"thresh"[m[K, .5);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:372:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  372 |     l.classfix = option_find_int_quiet(options, [01;35m[K"classfix"[m[K, 0);
      |                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:373:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  373 |     l.absolute = option_find_int_quiet(options, [01;35m[K"absolute"[m[K, 0);
      |                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:374:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  374 |     l.random = option_find_int_quiet(options, [01;35m[K"random"[m[K, 0);
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:376:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  376 |     l.coord_scale = option_find_float(options, [01;35m[K"coord_scale"[m[K, 1);
      |                                                [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:377:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  377 |     l.object_scale = option_find_float(options, [01;35m[K"object_scale"[m[K, 1);
      |                                                 [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:378:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  378 |     l.noobject_scale = option_find_float(options, [01;35m[K"noobject_scale"[m[K, 1);
      |                                                   [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:379:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  379 |     l.mask_scale = option_find_float(options, [01;35m[K"mask_scale"[m[K, 1);
      |                                               [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:380:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  380 |     l.class_scale = option_find_float(options, [01;35m[K"class_scale"[m[K, 1);
      |                                                [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:381:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  381 |     l.bias_match = option_find_int_quiet(options, [01;35m[K"bias_match"[m[K,0);
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:383:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  383 |     char *tree_file = option_find_str(options, [01;35m[K"tree"[m[K, 0);
      |                                                [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:385:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  385 |     char *map_file = option_find_str(options, [01;35m[K"map"[m[K, 0);
      |                                               [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:388:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  388 |     char *a = option_find_str(options, [01;35m[K"anchors"[m[K, 0);
      |                                        [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kdetection_layer parse_detection(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:407:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  407 |     int coords = option_find_int(options, [01;35m[K"coords"[m[K, 1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:408:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  408 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 1);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:409:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  409 |     int rescore = option_find_int(options, [01;35m[K"rescore"[m[K, 0);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:410:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  410 |     int num = option_find_int(options, [01;35m[K"num"[m[K, 1);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:411:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  411 |     int side = option_find_int(options, [01;35m[K"side"[m[K, 7);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:414:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  414 |     layer.softmax = option_find_int(options, [01;35m[K"softmax"[m[K, 0);
      |                                              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:415:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  415 |     layer.sqrt = option_find_int(options, [01;35m[K"sqrt"[m[K, 0);
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:417:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  417 |     layer.max_boxes = option_find_int_quiet(options, [01;35m[K"max"[m[K,90);
      |                                                      [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:418:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  418 |     layer.coord_scale = option_find_float(options, [01;35m[K"coord_scale"[m[K, 1);
      |                                                    [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:419:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  419 |     layer.forced = option_find_int(options, [01;35m[K"forced"[m[K, 0);
      |                                             [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:420:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  420 |     layer.object_scale = option_find_float(options, [01;35m[K"object_scale"[m[K, 1);
      |                                                     [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:421:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  421 |     layer.noobject_scale = option_find_float(options, [01;35m[K"noobject_scale"[m[K, 1);
      |                                                       [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:422:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  422 |     layer.class_scale = option_find_float(options, [01;35m[K"class_scale"[m[K, 1);
      |                                                    [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:423:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  423 |     layer.jitter = option_find_float(options, [01;35m[K"jitter"[m[K, .2);
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:424:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  424 |     layer.random = option_find_int_quiet(options, [01;35m[K"random"[m[K, 0);
      |                                                   [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:425:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  425 |     layer.reorg = option_find_int_quiet(options, [01;35m[K"reorg"[m[K, 0);
      |                                                  [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kcost_layer parse_cost(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:431:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  431 |     char *type_s = option_find_str(options, [01;35m[K"type"[m[K, "sse");
      |                                             [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:431:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  431 |     char *type_s = option_find_str(options, "type", [01;35m[K"sse"[m[K);
      |                                                     [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:433:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  433 |     float scale = option_find_float_quiet(options, [01;35m[K"scale"[m[K,1);
      |                                                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:435:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  435 |     layer.ratio =  option_find_float_quiet(options, [01;35m[K"ratio"[m[K,0);
      |                                                     [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:436:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  436 |     layer.noobject_scale =  option_find_float_quiet(options, [01;35m[K"noobj"[m[K, 1);
      |                                                              [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:437:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  437 |     layer.thresh =  option_find_float_quiet(options, [01;35m[K"thresh"[m[K,0);
      |                                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kcrop_layer parse_crop(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:443:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  443 |     int crop_height = option_find_int(options, [01;35m[K"crop_height"[m[K,1);
      |                                                [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:444:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  444 |     int crop_width = option_find_int(options, [01;35m[K"crop_width"[m[K,1);
      |                                               [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:445:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  445 |     int flip = option_find_int(options, [01;35m[K"flip"[m[K,0);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:446:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  446 |     float angle = option_find_float(options, [01;35m[K"angle"[m[K,0);
      |                                              [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:447:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  447 |     float saturation = option_find_float(options, [01;35m[K"saturation"[m[K,1);
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:448:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  448 |     float exposure = option_find_float(options, [01;35m[K"exposure"[m[K,1);
      |                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:457:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  457 |     int noadjust = option_find_int_quiet(options, [01;35m[K"noadjust"[m[K,0);
      |                                                   [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:460:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  460 |     l.shift = option_find_float(options, [01;35m[K"shift"[m[K, 0);
      |                                          [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_reorg(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:467:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  467 |     int stride = option_find_int(options, [01;35m[K"stride"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:468:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  468 |     int reverse = option_find_int_quiet(options, [01;35m[K"reverse"[m[K,0);
      |                                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:469:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  469 |     int flatten = option_find_int_quiet(options, [01;35m[K"flatten"[m[K,0);
      |                                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:470:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  470 |     int extra = option_find_int_quiet(options, [01;35m[K"extra"[m[K,0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kmaxpool_layer parse_maxpool(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:485:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  485 |     int stride = option_find_int(options, [01;35m[K"stride"[m[K,1);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:486:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  486 |     int size = option_find_int(options, [01;35m[K"size"[m[K,stride);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:487:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  487 |     int padding = option_find_int_quiet(options, [01;35m[K"padding"[m[K, size-1);
      |                                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kdropout_layer parse_dropout(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:515:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  515 |     float probability = option_find_float(options, [01;35m[K"probability"[m[K, .5);
      |                                                    [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_normalization(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:525:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  525 |     float alpha = option_find_float(options, [01;35m[K"alpha"[m[K, .0001);
      |                                              [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:526:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  526 |     float beta =  option_find_float(options, [01;35m[K"beta"[m[K , .75);
      |                                              [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:527:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  527 |     float kappa = option_find_float(options, [01;35m[K"kappa"[m[K, 1);
      |                                              [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:528:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  528 |     int size = option_find_int(options, [01;35m[K"size"[m[K, 5);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_shortcut(list*, size_params, network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:541:36:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  541 |     char *l = option_find(options, [01;35m[K"from"[m[K);
      |                                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:550:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  550 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "linear");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:550:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  550 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"linear"[m[K);
      |                                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:553:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  553 |     s.alpha = option_find_float_quiet(options, [01;35m[K"alpha"[m[K, 1);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:554:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  554 |     s.beta = option_find_float_quiet(options, [01;35m[K"beta"[m[K, 1);
      |                                               [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_activation(list*, size_params)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:580:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  580 |     char *activation_s = option_find_str(options, [01;35m[K"activation"[m[K, "linear");
      |                                                   [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:580:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  580 |     char *activation_s = option_find_str(options, "activation", [01;35m[K"linear"[m[K);
      |                                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klayer parse_upsample(list*, size_params, network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:595:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  595 |     int stride = option_find_int(options, [01;35m[K"stride"[m[K,2);
      |                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:597:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  597 |     l.scale = option_find_float_quiet(options, [01;35m[K"scale"[m[K, 1);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kroute_layer parse_route(list*, size_params, network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:603:36:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  603 |     char *l = option_find(options, [01;35m[K"layers"[m[K);
      |                                    [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:612:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  612 |     int *layers = [01;35m[Kcalloc(n, sizeof(int))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:613:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  613 |     int *sizes = [01;35m[Kcalloc(n, sizeof(int))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kvoid parse_net_options(list*, network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:657:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  657 |     net->batch = option_find_int(options, [01;35m[K"batch"[m[K,1);
      |                                           [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:658:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  658 |     net->learning_rate = option_find_float(options, [01;35m[K"learning_rate"[m[K, .001);
      |                                                     [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:659:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  659 |     net->momentum = option_find_float(options, [01;35m[K"momentum"[m[K, .9);
      |                                                [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:660:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  660 |     net->decay = option_find_float(options, [01;35m[K"decay"[m[K, .0001);
      |                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:661:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  661 |     int subdivs = option_find_int(options, [01;35m[K"subdivisions"[m[K,1);
      |                                            [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:662:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  662 |     net->time_steps = option_find_int_quiet(options, [01;35m[K"time_steps"[m[K,1);
      |                                                      [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:663:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  663 |     net->notruth = option_find_int_quiet(options, [01;35m[K"notruth"[m[K,0);
      |                                                   [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:667:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  667 |     net->random = option_find_int_quiet(options, [01;35m[K"random"[m[K, 0);
      |                                                  [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:669:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  669 |     net->adam = option_find_int_quiet(options, [01;35m[K"adam"[m[K, 0);
      |                                                [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:671:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  671 |         net->B1 = option_find_float(options, [01;35m[K"B1"[m[K, .9);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:672:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  672 |         net->B2 = option_find_float(options, [01;35m[K"B2"[m[K, .999);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:673:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  673 |         net->eps = option_find_float(options, [01;35m[K"eps"[m[K, .0000001);
      |                                               [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:676:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  676 |     net->h = option_find_int_quiet(options, [01;35m[K"height"[m[K,0);
      |                                             [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:677:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  677 |     net->w = option_find_int_quiet(options, [01;35m[K"width"[m[K,0);
      |                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:678:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  678 |     net->c = option_find_int_quiet(options, [01;35m[K"channels"[m[K,0);
      |                                             [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:679:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  679 |     net->inputs = option_find_int_quiet(options, [01;35m[K"inputs"[m[K, net->h * net->w * net->c);
      |                                                  [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:680:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  680 |     net->max_crop = option_find_int_quiet(options, [01;35m[K"max_crop"[m[K,net->w*2);
      |                                                    [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:681:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  681 |     net->min_crop = option_find_int_quiet(options, [01;35m[K"min_crop"[m[K,net->w);
      |                                                    [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:682:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  682 |     net->max_ratio = option_find_float_quiet(options, [01;35m[K"max_ratio"[m[K, (float) net->max_crop / net->w);
      |                                                       [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:683:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  683 |     net->min_ratio = option_find_float_quiet(options, [01;35m[K"min_ratio"[m[K, (float) net->min_crop / net->w);
      |                                                       [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:684:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  684 |     net->center = option_find_int_quiet(options, [01;35m[K"center"[m[K,0);
      |                                                  [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:685:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  685 |     net->clip = option_find_float_quiet(options, [01;35m[K"clip"[m[K, 0);
      |                                                  [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:687:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  687 |     net->angle = option_find_float_quiet(options, [01;35m[K"angle"[m[K, 0);
      |                                                   [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:688:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  688 |     net->aspect = option_find_float_quiet(options, [01;35m[K"aspect"[m[K, 1);
      |                                                    [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:689:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  689 |     net->saturation = option_find_float_quiet(options, [01;35m[K"saturation"[m[K, 1);
      |                                                        [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:690:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  690 |     net->exposure = option_find_float_quiet(options, [01;35m[K"exposure"[m[K, 1);
      |                                                      [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:691:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  691 |     net->hue = option_find_float_quiet(options, [01;35m[K"hue"[m[K, 0);
      |                                                 [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:695:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  695 |     char *policy_s = option_find_str(options, [01;35m[K"policy"[m[K, "constant");
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:695:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  695 |     char *policy_s = option_find_str(options, "policy", [01;35m[K"constant"[m[K);
      |                                                         [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:697:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  697 |     net->burn_in = option_find_int_quiet(options, [01;35m[K"burn_in"[m[K, 0);
      |                                                   [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:698:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  698 |     net->power = option_find_float_quiet(options, [01;35m[K"power"[m[K, 4);
      |                                                   [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:700:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  700 |         net->step = option_find_int(options, [01;35m[K"step"[m[K, 1);
      |                                              [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:701:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  701 |         net->scale = option_find_float(options, [01;35m[K"scale"[m[K, 1);
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:703:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  703 |         char *l = option_find(options, [01;35m[K"steps"[m[K);
      |                                        [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:704:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  704 |         char *p = option_find(options, [01;35m[K"scales"[m[K);
      |                                        [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:713:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  713 |         int *steps = [01;35m[Kcalloc(n, sizeof(int))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:714:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  714 |         float *scales = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:727:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  727 |         net->gamma = option_find_float(options, [01;35m[K"gamma"[m[K, 1);
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:729:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  729 |         net->gamma = option_find_float(options, [01;35m[K"gamma"[m[K, 1);
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:730:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  730 |         net->step = option_find_int(options, [01;35m[K"step"[m[K, 1);
      |                                              [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:733:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  733 |     net->max_batches = option_find_int(options, [01;35m[K"max_batches"[m[K, 0);
      |                                                 [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Knetwork* parse_network_cfg(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:774:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  774 |         layer l = {[01;35m[K0[m[K};
      |                    [01;35m[K^[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:841:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  841 |         l.truth = option_find_int_quiet(options, [01;35m[K"truth"[m[K, 0);
      |                                                  [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:842:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  842 |         l.onlyforward = option_find_int_quiet(options, [01;35m[K"onlyforward"[m[K, 0);
      |                                                        [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:843:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  843 |         l.stopbackward = option_find_int_quiet(options, [01;35m[K"stopbackward"[m[K, 0);
      |                                                         [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:844:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  844 |         l.dontsave = option_find_int_quiet(options, [01;35m[K"dontsave"[m[K, 0);
      |                                                     [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:845:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  845 |         l.dontload = option_find_int_quiet(options, [01;35m[K"dontload"[m[K, 0);
      |                                                     [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:846:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  846 |         l.numload = option_find_int_quiet(options, [01;35m[K"numload"[m[K, 0);
      |                                                    [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:847:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  847 |         l.dontloadscales = option_find_int_quiet(options, [01;35m[K"dontloadscales"[m[K, 0);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:848:66:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  848 |         l.learning_rate_scale = option_find_float_quiet(options, [01;35m[K"learning_rate"[m[K, 1);
      |                                                                  [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:849:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  849 |         l.smooth = option_find_float_quiet(options, [01;35m[K"smooth"[m[K, 0);
      |                                                     [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:869:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  869 |     net->input = [01;35m[Kcalloc(net->inputs*net->batch, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:870:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  870 |     net->truth = [01;35m[Kcalloc(net->truths*net->batch, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:882:36:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  882 |             net->workspace = [01;35m[Kcalloc(1, workspace_size)[m[K;
      |                              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                    [01;35m[K|[m[K
      |                                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Klist* read_cfg(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:904:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ksection*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  904 |                 current = [01;35m[Kmalloc(sizeof(section))[m[K;
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:[m[K In function â€˜[01m[Kvoid transpose_matrix(float*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/parser.cpp:1087:30:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1087 |     float *transpose = [01;35m[Kcalloc(rows*cols, sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                              [01;35m[K|[m[K
      |                              [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:[m[K In function â€˜[01m[Klayer make_region_layer(int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:15:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   15 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:28:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   28 |     l.cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:29:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   29 |     l.biases = [01;35m[Kcalloc(n*2, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:30:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   30 |     l.bias_updates = [01;35m[Kcalloc(n*2, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:34:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   34 |     l.delta = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:35:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   35 |     l.output = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_region_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:64:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   64 |     l->output = [01;35m[Krealloc(l->output, l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/region_layer.cpp:65:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   65 |     l->delta = [01;35m[Krealloc(l->delta, l->batch*l->outputs*sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[ 65%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:[m[K In function â€˜[01m[Klayer make_reorg_layer(int, int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:10:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   10 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:43:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   43 |     l.output =  [01;35m[Kcalloc(output_size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:44:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   44 |     l.delta =   [01;35m[Kcalloc(output_size, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_reorg_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:80:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   80 |     l->output = [01;35m[Krealloc(l->output, output_size * sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/reorg_layer.cpp:81:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   81 |     l->delta = [01;35m[Krealloc(l->delta, output_size * sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:[m[K In function â€˜[01m[Klayer make_rnn_layer(int, int, int, int, ACTIVATION, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:33:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:39:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   39 |     l.state = [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:40:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   40 |     l.prev_state = [01;35m[Kcalloc(batch*outputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:42:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   42 |     l.input_layer = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:47:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   47 |     l.self_layer = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/rnn_layer.cpp:52:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Klayer*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   52 |     l.output_layer = [01;35m[Kmalloc(sizeof(layer))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[ 67%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp.o[0m
[ 68%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp.o[0m
[ 69%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:[m[K In function â€˜[01m[Ksoftmax_layer make_softmax_layer(int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:15:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   15 |     softmax_layer l = {[01;35m[K0[m[K};
      |                        [01;35m[K^[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:21:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   21 |     l.loss = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:22:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   22 |     l.output = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:23:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   23 |     l.delta = [01;35m[Kcalloc(inputs*batch, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/softmax_layer.cpp:24:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   24 |     l.cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:[m[K In function â€˜[01m[Kroute_layer make_route_layer(int, int, int*, int*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:10:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   10 |     route_layer l = {[01;35m[K0[m[K};
      |                      [01;35m[K^[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:25:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   25 |     l.delta =  [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:26:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   26 |     l.output = [01;35m[Kcalloc(outputs*batch, sizeof(float))[m[K;;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_route_layer(route_layer*, network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:62:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   62 |     l->delta =  [01;35m[Krealloc(l->delta, l->outputs*l->batch*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/route_layer.cpp:63:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   63 |     l->output = [01;35m[Krealloc(l->output, l->outputs*l->batch*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[ 70%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:[m[K In function â€˜[01m[Klayer make_shortcut_layer(int, int, int, int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:12:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   12 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:26:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   26 |     l.delta =  [01;35m[Kcalloc(l.outputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:27:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   27 |     l.output = [01;35m[Kcalloc(l.outputs*batch, sizeof(float))[m[K;;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_shortcut_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:49:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   49 |     l->delta =  [01;35m[Krealloc(l->delta, l->outputs*l->batch*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/shortcut_layer.cpp:50:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   50 |     l->output = [01;35m[Krealloc(l->output, l->outputs*l->batch*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[ 72%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:[m[K In function â€˜[01m[Klayer make_upsample_layer(int, int, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:9:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
    9 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:27:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   27 |     l.delta =  [01;35m[Kcalloc(l.outputs*batch, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:28:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   28 |     l.output = [01;35m[Kcalloc(l.outputs*batch, sizeof(float))[m[K;;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_upsample_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:56:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   56 |     l->delta =  [01;35m[Krealloc(l->delta, l->outputs*l->batch*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/upsample_layer.cpp:57:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   57 |     l->output = [01;35m[Krealloc(l->output, l->outputs*l->batch*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[ 73%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp.o[0m
[ 74%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/art.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kint* read_intlist(char*, int*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:46:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   46 |         gpus = [01;35m[Kcalloc(*ngpus, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:52:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   52 |         gpus = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kint* read_map(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:68:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   68 |         map = [01;35m[Krealloc(map, n*sizeof(int))[m[K;
      |               [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kvoid sorta_shuffle(void*, size_t, size_t, size_t)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:81:20:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [[01;35m[K-Wpointer-arith[m[K]
   81 |         shuffle([01;35m[Karr+(start*size)[m[K, num, size);
      |                 [01;35m[K~~~^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kvoid shuffle(void*, size_t, size_t)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:91:33:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [[01;35m[K-Wpointer-arith[m[K]
   91 |         memcpy(swp,          [01;35m[Karr+(j*size)[m[K, size);
      |                              [01;35m[K~~~^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:92:19:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [[01;35m[K-Wpointer-arith[m[K]
   92 |         memcpy([01;35m[Karr+(j*size)[m[K, arr+(i*size), size);
      |                [01;35m[K~~~^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:92:33:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [[01;35m[K-Wpointer-arith[m[K]
   92 |         memcpy(arr+(j*size), [01;35m[Karr+(i*size)[m[K, size);
      |                              [01;35m[K~~~^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:93:19:[m[K [01;35m[Kwarning: [m[Kpointer of type â€˜[01m[Kvoid *[m[Kâ€™ used in arithmetic [[01;35m[K-Wpointer-arith[m[K]
   93 |         memcpy([01;35m[Karr+(i*size)[m[K, swp,          size);
      |                [01;35m[K~~~^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kint* random_index_order(int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:99:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   99 |     int *inds = [01;35m[Kcalloc(max-min, sizeof(int))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kunsigned char* read_file(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:269:33:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kunsigned char*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  269 |     unsigned char *text = [01;35m[Kcalloc(size+1, sizeof(char))[m[K;
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kchar* fgetl(FILE*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:339:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  339 |     char *line = [01;35m[Kmalloc(size*sizeof(char))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:350:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  350 |             line = [01;35m[Krealloc(line, size*sizeof(char))[m[K;
      |                    [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kchar* copy_string(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:425:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  425 |     char *copy = [01;35m[Kmalloc(strlen(s)+1)[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kfloat* parse_fields(char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:461:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  461 |     float *field = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kfloat** one_hot_encode(float*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:718:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  718 |     float **t = [01;35m[Kcalloc(n, sizeof(float*))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:720:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  720 |         t[i] = [01;35m[Kcalloc(k, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:[m[K In function â€˜[01m[Ktree* read_tree(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:94:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   94 |         char *id = [01;35m[Kcalloc(256, sizeof(char))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:97:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   97 |         t.parent = [01;35m[Krealloc(t.parent, (n+1)*sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:100:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  100 |         t.child = [01;35m[Krealloc(t.child, (n+1)*sizeof(int))[m[K;
      |                   [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:103:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  103 |         t.name = [01;35m[Krealloc(t.name, (n+1)*sizeof(char *))[m[K;
      |                  [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:107:37:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  107 |             t.group_offset = [01;35m[Krealloc(t.group_offset, groups * sizeof(int))[m[K;
      |                              [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                     [01;35m[K|[m[K
      |                                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:109:35:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  109 |             t.group_size = [01;35m[Krealloc(t.group_size, groups * sizeof(int))[m[K;
      |                            [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                   [01;35m[K|[m[K
      |                                   [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:114:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  114 |         t.group = [01;35m[Krealloc(t.group, (n+1)*sizeof(int))[m[K;
      |                   [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:123:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  123 |     t.group_offset = [01;35m[Krealloc(t.group_offset, groups * sizeof(int))[m[K;
      |                      [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:125:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  125 |     t.group_size = [01;35m[Krealloc(t.group_size, groups * sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:129:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  129 |     t.leaf = [01;35m[Kcalloc(n, sizeof(int))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/tree.cpp:135:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ktree*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  135 |     tree *tree_ptr = [01;35m[Kcalloc(1, sizeof(tree))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:[m[K In function â€˜[01m[Kvoid demo_art(char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:15:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   15 |     char *window = [01;35m[K"ArtJudgementBot9000!!!"[m[K;
      |                    [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:[m[K In function â€˜[01m[Kvoid run_art(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/art.cpp:54:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   54 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
In file included from [01m[K/usr/include/string.h:495[m[K,
                 from [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:3[m[K:
In function â€˜[01m[Kchar* strncpy(char*, const char*, size_t)[m[Kâ€™,
    inlined from â€˜[01m[Kchar* copy_string(char*)[m[Kâ€™ at [01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:426:12[m[K:
[01m[K/usr/include/x86_64-linux-gnu/bits/string_fortified.h:106:34:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kchar* __builtin_strncpy(char*, const char*, long unsigned int)[m[Kâ€™ specified bound depends on the length of the source argument [[01;35m[K-Wstringop-overflow=[m[K]
  106 |   return [01;35m[K__builtin___strncpy_chk (__dest, __src, __len, __bos (__dest))[m[K;
      |          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:[m[K In function â€˜[01m[Kchar* copy_string(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/utils.cpp:426:28:[m[K [01;36m[Knote: [m[Klength computed here
  426 |     strncpy(copy, s, [01;36m[Kstrlen(s)[m[K+1);
      |                      [01;36m[K~~~~~~^~~[m[K
[ 75%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp.o[0m
[ 77%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:[m[K In function â€˜[01m[Klayer make_yolo_layer(int, int, int, int, int, int*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:16:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   16 |     layer l = {[01;35m[K0[m[K};
      |                [01;35m[K^[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   29 |     l.cost = [01;35m[Kcalloc(1, sizeof(float))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:30:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   30 |     l.biases = [01;35m[Kcalloc(total*2, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:33:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   33 |         l.mask = [01;35m[Kcalloc(n, sizeof(int))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:38:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   38 |     l.bias_updates = [01;35m[Kcalloc(n*2, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:42:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   42 |     l.delta = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:43:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   43 |     l.output = [01;35m[Kcalloc(batch*l.outputs, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:[m[K In function â€˜[01m[Kvoid resize_yolo_layer(layer*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:71:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   71 |     l->output = [01;35m[Krealloc(l->output, l->batch*l->outputs*sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/src/yolo_layer.cpp:72:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   72 |     l->delta = [01;35m[Krealloc(l->delta, l->batch*l->outputs*sizeof(float))[m[K;
      |                [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid extend_data_truth(data*, int, float)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:10:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   10 |         d->y.vals[i] = [01;35m[Krealloc(d->y.vals[i], (d->y.cols+n)*sizeof(float))[m[K;
      |                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kmatrix network_loss_data(network*, data)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:23:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   23 |     float *X = [01;35m[Kcalloc(net->batch*test.X.cols, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:24:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   24 |     float *y = [01;35m[Kcalloc(net->batch*test.y.cols, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid train_attention(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:63:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   63 |     network **nets = [01;35m[Kcalloc(ngpus, sizeof(network*))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:83:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   83 |     char *backup_directory = option_find_str(options, [01;35m[K"backup"[m[K, "/backup/");
      |                                                       [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:83:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   83 |     char *backup_directory = option_find_str(options, "backup", [01;35m[K"/backup/"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:84:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   84 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:84:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   84 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:85:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   85 |     char *train_list = option_find_str(options, [01;35m[K"train"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:85:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   85 |     char *train_list = option_find_str(options, "train", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:86:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   86 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:127:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  127 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:155:27:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  155 |         int *inds = [01;35m[Kcalloc(resized.y.rows, sizeof(int))[m[K;
      |                     [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:209:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  209 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:179:15:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kim[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  179 |         image [01;35m[Kim[m[K = float_to_image(64,64,3,resized.X.vals[0]);
      |               [01;35m[K^~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid validate_attention_single(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:242:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  242 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:242:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  242 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:243:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  243 |     char *leaf_list = option_find_str(options, [01;35m[K"leaves"[m[K, 0);
      |                                                [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:245:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  245 |     char *valid_list = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:245:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  245 |     char *valid_list = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:246:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  246 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:247:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  247 |     int topk = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:258:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  258 |     int *indexes = [01;35m[Kcalloc(topk, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:262:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  262 |     float *avgs = [01;35m[Kcalloc(classes, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:263:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  263 |     int *inds = [01;35m[Kcalloc(divs*divs, sizeof(int))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid validate_attention_multi(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:330:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  330 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:330:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  330 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:331:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  331 |     char *valid_list = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:331:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  331 |     char *valid_list = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:332:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  332 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:333:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  333 |     int topk = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:346:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  346 |     int *indexes = [01;35m[Kcalloc(topk, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:357:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  357 |         float *pred = [01;35m[Kcalloc(classes, sizeof(float))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid predict_attention(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:390:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  390 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:391:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  391 |     if(!name_list) name_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                         [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:391:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  391 |     if(!name_list) name_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                                   [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:392:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  392 |     if(top == 0) top = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                                 [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:397:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  397 |     int *indexes = [01;35m[Kcalloc(top, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:[m[K In function â€˜[01m[Kvoid run_attention(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:441:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  441 |     char *gpu_list = find_char_arg(argc, argv, [01;35m[K"-gpus"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:446:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  446 |     int top = find_int_arg(argc, argv, [01;35m[K"-t"[m[K, 0);
      |                                        [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/attention.cpp:447:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  447 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:[m[K In function â€˜[01m[Kvoid train_captcha(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:39:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   39 |     char **labels = get_labels([01;35m[K"/data/captcha/reimgs.labels.list"[m[K);
      |                                [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:41:27:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   41 |         plist = get_paths([01;35m[K"/data/captcha/reimgs.solved.list"[m[K);
      |                           [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:43:27:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   43 |         plist = get_paths([01;35m[K"/data/captcha/reimgs.raw.list"[m[K);
      |                           [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:[m[K In function â€˜[01m[Kvoid test_captcha(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:99:31:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   99 |     char **names = get_labels([01;35m[K"/data/captcha/reimgs.labels.list"[m[K);
      |                               [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:[m[K In function â€˜[01m[Kvoid valid_captcha(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:132:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  132 |     char **labels = get_labels([01;35m[K"/data/captcha/reimgs.labels.list"[m[K);
      |                                [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/captcha.cpp:134:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  134 |     list *plist = get_paths([01;35m[K"/data/captcha/reimgs.fg.list"[m[K);
      |                             [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[ 78%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp.o[0m
[ 79%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp.o[0m
[ 81%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid train_cifar(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:12:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   12 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:16:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   16 |     char **labels = get_labels([01;35m[K"data/cifar/labels.txt"[m[K);
      |                                [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:19:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   19 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:26:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   26 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid train_cifar_distill(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:57:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   57 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:61:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   61 |     char **labels = get_labels([01;35m[K"data/cifar/labels.txt"[m[K);
      |                                [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:65:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   65 |     matrix soft = csv_to_matrix([01;35m[K"results/ensemble.csv"[m[K);
      |                                 [01;35m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:72:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   72 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:79:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   79 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid test_cifar_multi(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:108:35:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  108 |     data test = load_cifar10_data([01;35m[K"data/cifar/cifar-10-batches-bin/test_batch.bin"[m[K);
      |                                   [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid test_cifar(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:138:35:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  138 |     data test = load_cifar10_data([01;35m[K"data/cifar/cifar-10-batches-bin/test_batch.bin"[m[K);
      |                                   [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid extract_cifar()[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:19:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {[01;35m[K"airplane"[m[K,"automobile","bird","cat","deer","dog","frog","horse","ship","truck"};
      |                   [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane",[01;35m[K"automobile"[m[K,"bird","cat","deer","dog","frog","horse","ship","truck"};
      |                              [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile",[01;35m[K"bird"[m[K,"cat","deer","dog","frog","horse","ship","truck"};
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile","bird",[01;35m[K"cat"[m[K,"deer","dog","frog","horse","ship","truck"};
      |                                                  [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile","bird","cat",[01;35m[K"deer"[m[K,"dog","frog","horse","ship","truck"};
      |                                                        [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:63:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile","bird","cat","deer",[01;35m[K"dog"[m[K,"frog","horse","ship","truck"};
      |                                                               [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:69:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile","bird","cat","deer","dog",[01;35m[K"frog"[m[K,"horse","ship","truck"};
      |                                                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:76:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile","bird","cat","deer","dog","frog",[01;35m[K"horse"[m[K,"ship","truck"};
      |                                                                            [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:84:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile","bird","cat","deer","dog","frog","horse",[01;35m[K"ship"[m[K,"truck"};
      |                                                                                    [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:151:91:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  151 | char *labels[] = {"airplane","automobile","bird","cat","deer","dog","frog","horse","ship",[01;35m[K"truck"[m[K};
      |                                                                                           [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:154:35:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  154 |     data test = load_cifar10_data([01;35m[K"data/cifar/cifar-10-batches-bin/test_batch.bin"[m[K);
      |                                   [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid test_cifar_csv(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:176:35:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  176 |     data test = load_cifar10_data([01;35m[K"data/cifar/cifar-10-batches-bin/test_batch.bin"[m[K);
      |                                   [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:[m[K In function â€˜[01m[Kvoid eval_cifar_csv()[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:221:35:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  221 |     data test = load_cifar10_data([01;35m[K"data/cifar/cifar-10-batches-bin/test_batch.bin"[m[K);
      |                                   [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/cifar.cpp:223:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  223 |     matrix pred = csv_to_matrix([01;35m[K"results/combined.csv"[m[K);
      |                                 [01;35m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:25:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {[01;35m[K"person"[m[K,"bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                         [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:34:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person",[01;35m[K"bicycle"[m[K,"car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                  [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle",[01;35m[K"car"[m[K,"motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                            [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:50:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car",[01;35m[K"motorcycle"[m[K,"airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                  [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:63:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle",[01;35m[K"airplane"[m[K,"bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                               [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:74:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane",[01;35m[K"bus"[m[K,"train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                          [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:80:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus",[01;35m[K"train"[m[K,"truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:88:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train",[01;35m[K"truck"[m[K,"boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                        [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:96:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck",[01;35m[K"boat"[m[K,"traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:103:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat",[01;35m[K"traffic light"[m[K,"fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                       [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:119:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light",[01;35m[K"fire hydrant"[m[K,"stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                       [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:134:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant",[01;35m[K"stop sign"[m[K,"parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                      [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:146:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign",[01;35m[K"parking meter"[m[K,"bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                  [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:162:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter",[01;35m[K"bench"[m[K,"bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                  [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:170:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench",[01;35m[K"bird"[m[K,"cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:177:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird",[01;35m[K"cat"[m[K,"dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                 [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:183:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat",[01;35m[K"dog"[m[K,"horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                       [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:189:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog",[01;35m[K"horse"[m[K,"sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:197:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse",[01;35m[K"sheep"[m[K,"cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                     [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:205:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep",[01;35m[K"cow"[m[K,"elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                             [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:211:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow",[01;35m[K"elephant"[m[K,"bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                   [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:222:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant",[01;35m[K"bear"[m[K,"zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                              [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:229:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear",[01;35m[K"zebra"[m[K,"giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                     [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:237:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra",[01;35m[K"giraffe"[m[K,"backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                             [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:247:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe",[01;35m[K"backpack"[m[K,"umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                       [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:258:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack",[01;35m[K"umbrella"[m[K,"handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                  [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:269:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella",[01;35m[K"handbag"[m[K,"tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                             [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:279:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag",[01;35m[K"tie"[m[K,"suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                       [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:285:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie",[01;35m[K"suitcase"[m[K,"frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                             [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:296:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase",[01;35m[K"frisbee"[m[K,"skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                        [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:306:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee",[01;35m[K"skis"[m[K,"snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                  [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:313:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis",[01;35m[K"snowboard"[m[K,"sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                         [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:325:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard",[01;35m[K"sports ball"[m[K,"kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                     [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:339:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball",[01;35m[K"kite"[m[K,"baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                   [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:346:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite",[01;35m[K"baseball bat"[m[K,"baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                          [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:361:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat",[01;35m[K"baseball glove"[m[K,"skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                         [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:378:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove",[01;35m[K"skateboard"[m[K,"surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                          [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:391:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard",[01;35m[K"surfboard"[m[K,"tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                       [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:403:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard",[01;35m[K"tennis racket"[m[K,"bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                   [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:419:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket",[01;35m[K"bottle"[m[K,"wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                   [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:428:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle",[01;35m[K"wine glass"[m[K,"cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                            [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:441:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass",[01;35m[K"cup"[m[K,"fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:447:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup",[01;35m[K"fork"[m[K,"knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                               [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:454:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork",[01;35m[K"knife"[m[K,"spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                      [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:462:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife",[01;35m[K"spoon"[m[K,"bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                              [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:470:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon",[01;35m[K"bowl"[m[K,"banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:477:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl",[01;35m[K"banana"[m[K,"apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:486:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana",[01;35m[K"apple"[m[K,"sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:494:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple",[01;35m[K"sandwich"[m[K,"orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:505:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich",[01;35m[K"orange"[m[K,"broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:514:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange",[01;35m[K"broccoli"[m[K,"carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:525:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli",[01;35m[K"carrot"[m[K,"hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:534:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot",[01;35m[K"hot dog"[m[K,"pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:544:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog",[01;35m[K"pizza"[m[K,"donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:552:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza",[01;35m[K"donut"[m[K,"cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:560:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut",[01;35m[K"cake"[m[K,"chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:567:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake",[01;35m[K"chair"[m[K,"couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:575:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair",[01;35m[K"couch"[m[K,"potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:583:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch",[01;35m[K"potted plant"[m[K,"bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:598:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant",[01;35m[K"bed"[m[K,"dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:604:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed",[01;35m[K"dining table"[m[K,"toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:619:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table",[01;35m[K"toilet"[m[K,"tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:628:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet",[01;35m[K"tv"[m[K,"laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:633:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv",[01;35m[K"laptop"[m[K,"mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:642:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop",[01;35m[K"mouse"[m[K,"remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:650:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse",[01;35m[K"remote"[m[K,"keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:659:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote",[01;35m[K"keyboard"[m[K,"cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:670:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard",[01;35m[K"cell phone"[m[K,"microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:683:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone",[01;35m[K"microwave"[m[K,"oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:695:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave",[01;35m[K"oven"[m[K,"toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:702:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven",[01;35m[K"toaster"[m[K,"sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:712:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster",[01;35m[K"sink"[m[K,"refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:719:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink",[01;35m[K"refrigerator"[m[K,"book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:734:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator",[01;35m[K"book"[m[K,"clock","vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:741:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book",[01;35m[K"clock"[m[K,"vase","scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:749:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock",[01;35m[K"vase"[m[K,"scissors","teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:756:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase",[01;35m[K"scissors"[m[K,"teddy bear","hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:767:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors",[01;35m[K"teddy bear"[m[K,"hair drier","toothbrush"};
      |[01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:780:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear",[01;35m[K"hair drier"[m[K,"toothbrush"};
      |[01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:5:793:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 | char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier",[01;35m[K"toothbrush"[m[K};
      |[01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid train_coco(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:13:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   13 |     char *train_images = [01;35m[K"data/coco.trainval.txt"[m[K;
      |                          [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:15:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   15 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:57:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   57 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid validate_coco(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:135:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  135 |     char *base = [01;35m[K"results/"[m[K;
      |                  [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:136:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  136 |     list *plist = get_paths([01;35m[K"data/coco_val_5k.list"[m[K);
      |                             [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:158:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  158 |     image *val = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:159:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  159 |     image *val_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:160:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  160 |     image *buf = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:161:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  161 |     image *buf_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:162:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t*[m[Kâ€™ {aka â€˜[01m[Klong unsigned int*[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  162 |     pthread_t *thr = [01;35m[Kcalloc(nthreads, sizeof(pthread_t))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid validate_coco_recall(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:219:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  219 |     char *base = [01;35m[K"results/comp4_det_test_"[m[K;
      |                  [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:220:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  220 |     list *plist = get_paths([01;35m[K"/home/pjreddie/data/voc/test/2007_test.txt"[m[K);
      |                             [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:228:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE**[m[Kâ€™ {aka â€˜[01m[K_IO_FILE**[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  228 |     FILE **fps = [01;35m[Kcalloc(classes, sizeof(FILE *))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:259:28:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  259 |         find_replace(path, [01;35m[K"images"[m[K, "labels", labelpath);
      |                            [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:259:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  259 |         find_replace(path, "images", [01;35m[K"labels"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:260:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  260 |         find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "labels", labelpath);
      |                                 [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:260:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  260 |         find_replace(labelpath, "JPEGImages", [01;35m[K"labels"[m[K, labelpath);
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:261:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  261 |         find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:261:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  261 |         find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:262:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  262 |         find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:262:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  262 |         find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:[m[K In function â€˜[01m[Kvoid run_coco(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:338:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  338 |     char *prefix = find_char_arg(argc, argv, [01;35m[K"-prefix"[m[K, 0);
      |                                              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:339:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  339 |     float thresh = find_float_arg(argc, argv, [01;35m[K"-thresh"[m[K, .2);
      |                                               [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:340:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  340 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:341:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  341 |     int frame_skip = find_int_arg(argc, argv, [01;35m[K"-s"[m[K, 0);
      |                                               [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/coco.cpp:351:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  351 |     int avg = find_int_arg(argc, argv, [01;35m[K"-avg"[m[K, 1);
      |                                        [01;35m[K^~~~~~[m[K
[ 82%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kfloat* get_regression_values(char**, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:8:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
    8 |     float *v = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid train_classifier(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:26:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   26 |     network **nets = [01;35m[Kcalloc(ngpus, sizeof(network*))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:46:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   46 |     char *backup_directory = option_find_str(options, [01;35m[K"backup"[m[K, "/backup/");
      |                                                       [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:46:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   46 |     char *backup_directory = option_find_str(options, "backup", [01;35m[K"/backup/"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:47:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   47 |     int tag = option_find_int_quiet(options, [01;35m[K"tag"[m[K, 0);
      |                                              [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:48:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   48 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:48:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   48 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:49:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   49 |     char *train_list = option_find_str(options, [01;35m[K"train"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:49:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   49 |     char *train_list = option_find_str(options, "train", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:50:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   50 |     char *tree = option_find_str(options, [01;35m[K"tree"[m[K, 0);
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:52:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   52 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:99:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   99 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:146:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  146 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_crop(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:178:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  178 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:178:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  178 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:179:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  179 |     char *valid_list = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:179:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  179 |     char *valid_list = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:180:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  180 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:181:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  181 |     int topk = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_10(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:243:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  243 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:243:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  243 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:244:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  244 |     char *valid_list = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:244:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  244 |     char *valid_list = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:245:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  245 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:246:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  246 |     int topk = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:257:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  257 |     int *indexes = [01;35m[Kcalloc(topk, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:284:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  284 |         float *pred = [01;35m[Kcalloc(classes, sizeof(float))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_full(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:312:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  312 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:312:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  312 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:313:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  313 |     char *valid_list = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:313:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  313 |     char *valid_list = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:314:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  314 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:315:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  315 |     int topk = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:326:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  326 |     int *indexes = [01;35m[Kcalloc(topk, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_single(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:370:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  370 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:370:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  370 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:371:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  371 |     char *leaf_list = option_find_str(options, [01;35m[K"leaves"[m[K, 0);
      |                                                [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:373:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  373 |     char *valid_list = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:373:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  373 |     char *valid_list = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:374:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  374 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:375:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  375 |     int topk = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:386:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  386 |     int *indexes = [01;35m[Kcalloc(topk, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid validate_classifier_multi(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:429:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  429 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:429:59:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  429 |     char *label_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                           [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:430:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  430 |     char *valid_list = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:430:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  430 |     char *valid_list = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:431:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  431 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:432:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  432 |     int topk = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                         [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:446:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  446 |     int *indexes = [01;35m[Kcalloc(topk, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:457:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  457 |         float *pred = [01;35m[Kcalloc(classes, sizeof(float))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid try_classifier(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:490:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  490 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:491:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  491 |     if(!name_list) name_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                         [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:491:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  491 |     if(!name_list) name_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                                   [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:492:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  492 |     int top = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:497:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  497 |     int *indexes = [01;35m[Kcalloc(top, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid predict_classifier(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:568:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  568 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:569:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  569 |     if(!name_list) name_list = option_find_str(options, [01;35m[K"labels"[m[K, "data/labels.list");
      |                                                         [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:569:67:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  569 |     if(!name_list) name_list = option_find_str(options, "labels", [01;35m[K"data/labels.list"[m[K);
      |                                                                   [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:570:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  570 |     if(top == 0) top = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                                 [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:575:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  575 |     int *indexes = [01;35m[Kcalloc(top, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid label_classifier(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:623:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  623 |     char *label_list = option_find_str(options, [01;35m[K"names"[m[K, "data/labels.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:623:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  623 |     char *label_list = option_find_str(options, "names", [01;35m[K"data/labels.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:624:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  624 |     char *test_list = option_find_str(options, [01;35m[K"test"[m[K, "data/train.list");
      |                                                [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:624:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  624 |     char *test_list = option_find_str(options, "test", [01;35m[K"data/train.list"[m[K);
      |                                                        [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:625:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  625 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid csv_classifier(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:657:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  657 |     char *test_list = option_find_str(options, [01;35m[K"test"[m[K, "data/test.list");
      |                                                [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:657:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  657 |     char *test_list = option_find_str(options, "test", [01;35m[K"data/test.list"[m[K);
      |                                                        [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:658:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  658 |     int top = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:665:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  665 |     int *indexes = [01;35m[Kcalloc(top, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid test_classifier(char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:697:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  697 |     char *test_list = option_find_str(options, [01;35m[K"test"[m[K, "data/test.list");
      |                                                [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:697:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  697 |     char *test_list = option_find_str(options, "test", [01;35m[K"data/test.list"[m[K);
      |                                                        [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:698:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  698 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid file_output_classifier(char*, char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:768:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  768 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 2);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid threat_classifier(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:811:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  811 |     int top = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:813:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  813 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:816:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  816 |     int *indexes = [01;35m[Kcalloc(top, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid gun_classifier(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:933:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  933 |     int top = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:935:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  935 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:938:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  938 |     int *indexes = [01;35m[Kcalloc(top, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:958:22:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  958 |         for(i = 0; [01;35m[Ki < sizeof(bad_cats)/sizeof(bad_cats[0])[m[K; ++i){
      |                    [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:967:22:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  967 |         for(i = 0; [01;35m[Ki < sizeof(bad_cats)/sizeof(bad_cats[0])[m[K; ++i){
      |                    [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid demo_classifier(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1002:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1002 |     int top = option_find_int(options, [01;35m[K"top"[m[K, 1);
      |                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1004:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1004 |     char *label_list = option_find_str(options, [01;35m[K"labels"[m[K, 0);
      |                                                 [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1005:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1005 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, label_list);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1008:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1008 |     int *indexes = [01;35m[Kcalloc(top, sizeof(int))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:[m[K In function â€˜[01m[Kvoid run_classifier(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1067:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1067 |     char *gpu_list = find_char_arg(argc, argv, [01;35m[K"-gpus"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1072:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1072 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1073:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1073 |     int top = find_int_arg(argc, argv, [01;35m[K"-t"[m[K, 0);
      |                                        [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/classifier.cpp:1074:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1074 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[ 83%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp.o[0m
[ 84%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:[m[K In function â€˜[01m[Klayer normalize_layer(layer, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:269:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  269 |     l.scales = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:273:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  273 |     l.rolling_mean = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:274:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  274 |     l.rolling_variance = [01;35m[Kcalloc(n, sizeof(float))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:409:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  409 |     gpu_index = find_int_arg(argc, argv, [01;35m[K"-i"[m[K, 0);
      |                                          [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:410:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  410 |     if(find_arg(argc, argv, [01;35m[K"-nogpu"[m[K)) {
      |                             [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:433:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  433 |         float thresh = find_float_arg(argc, argv, [01;35m[K"-thresh"[m[K, .5);
      |                                                   [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:435:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  435 |         char *outfile = find_char_arg(argc, argv, [01;35m[K"-out"[m[K, 0);
      |                                                   [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:436:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  436 |         int fullscreen = find_arg(argc, argv, [01;35m[K"-fullscreen"[m[K);
      |                                               [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:437:23:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  437 |         test_detector([01;35m[K"cfg/coco.data"[m[K, argv[2], argv[3], filename, thresh, .5, outfile, fullscreen);
      |                       [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/darknet.cpp:447:28:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  447 |         predict_classifier([01;35m[K"cfg/imagenet1k.data"[m[K, argv[2], argv[3], argv[4], 5);
      |                            [01;35m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kchar* fgetgo(FILE*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:22:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   22 |     char *line = [01;35m[Kmalloc(size*sizeof(char))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kmoves load_go_moves(char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:35:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   35 |     m.data = [01;35m[Kcalloc(128, sizeof(char*))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:42:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   42 |             m.data = [01;35m[Krealloc(m.data, m.n*sizeof(char*))[m[K;
      |                      [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:49:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   49 |     m.data = [01;35m[Krealloc(m.data, count*sizeof(char*))[m[K;
      |              [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid train_go(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:141:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  141 |     network **nets = [01;35m[Kcalloc(ngpus, sizeof(network*))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:156:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  156 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:165:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  165 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:187:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  187 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kint* calculate_liberties(float*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:229:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  229 |     int *lib = [01;35m[Kcalloc(19*19, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kfloat* network_predict_rotations(network*, float*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:396:23:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  396 |     float *in = [01;35m[Kcalloc(19*19*3*n, sizeof(float))[m[K;
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                       [01;35m[K|[m[K
      |                       [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kmcts_tree* expand(float*, float*, network*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:426:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kmcts_tree*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  426 |     mcts_tree *root = [01;35m[Kcalloc(1, sizeof(mcts_tree))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:428:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kmcts_tree**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  428 |     root->children = [01;35m[Kcalloc(19*19+1, sizeof(mcts_tree*))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:429:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  429 |     root->prior = [01;35m[Kcalloc(19*19 + 1, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:430:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  430 |     root->prob = [01;35m[Kcalloc(19*19 + 1, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:431:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  431 |     root->mean = [01;35m[Kcalloc(19*19 + 1, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:432:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  432 |     root->value = [01;35m[Kcalloc(19*19 + 1, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:433:31:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  433 |     root->visit_count = [01;35m[Kcalloc(19*19 + 1, sizeof(int))[m[K;
      |                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                               [01;35m[K|[m[K
      |                               [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kfloat* copy_board(float*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:456:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  456 |     float *next = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid valid_go(char*, char*, int, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:742:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  742 |     float *board = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:743:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  743 |     float *move = [01;35m[Kcalloc(19*19+2, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid engine_go(char*, char*, int, float, float, float, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:819:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  819 |     float *board = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:821:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  821 |     float *one = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:822:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  822 |     float *two = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid test_go(char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1104:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1104 |     float *board = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1106:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1106 |     float *move = [01;35m[Kcalloc(19*19+1, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid self_go(char*, char*, char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1227:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1227 |         net2 = [01;35m[Kcalloc(1, sizeof(network))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1235:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1235 |     float *board = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1237:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1237 |     float *one = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1238:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1238 |     float *two = [01;35m[Kcalloc(19*19*3, sizeof(float))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:[m[K In function â€˜[01m[Kvoid run_go(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1328:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1328 |     char *gpu_list = find_char_arg(argc, argv, [01;35m[K"-gpus"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1340:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
 1340 |         gpus = [01;35m[Kcalloc(ngpus, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1350:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1350 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1356:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1356 |     int multi = find_arg(argc, argv, [01;35m[K"-multi"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1357:37:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1357 |     int anon = find_arg(argc, argv, [01;35m[K"-anon"[m[K);
      |                                     [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1358:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1358 |     int iters = find_int_arg(argc, argv, [01;35m[K"-iters"[m[K, 500);
      |                                          [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1359:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1359 |     int resign = find_int_arg(argc, argv, [01;35m[K"-resign"[m[K, 175);
      |                                           [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1360:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1360 |     float cpuct = find_float_arg(argc, argv, [01;35m[K"-cpuct"[m[K, 5);
      |                                              [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1361:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1361 |     float temp = find_float_arg(argc, argv, [01;35m[K"-temp"[m[K, .1);
      |                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/go.cpp:1362:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1362 |     float time = find_float_arg(argc, argv, [01;35m[K"-time"[m[K, 0);
      |                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid train_detector(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:9:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    9 |     char *train_images = option_find_str(options, [01;35m[K"train"[m[K, "data/train.list");
      |                                                   [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:9:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    9 |     char *train_images = option_find_str(options, "train", [01;35m[K"data/train.list"[m[K);
      |                                                            [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:10:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   10 |     char *backup_directory = option_find_str(options, [01;35m[K"backup"[m[K, "/backup/");
      |                                                       [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:10:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   10 |     char *backup_directory = option_find_str(options, "backup", [01;35m[K"/backup/"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:16:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   16 |     network **nets = [01;35m[Kcalloc(ngpus, sizeof(network))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:62:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   62 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:66:44:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   66 |             if ([01;35m[Kget_current_batch(net)+200 > net->max_batches[m[K) dim = 608;
      |                 [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid validate_detector_flip(char*, char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:238:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  238 |     char *valid_images = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                   [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:238:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  238 |     char *valid_images = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                            [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:239:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  239 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, "data/names.list");
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:239:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  239 |     char *name_list = option_find_str(options, "names", [01;35m[K"data/names.list"[m[K);
      |                                                         [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:240:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  240 |     char *prefix = option_find_str(options, [01;35m[K"results"[m[K, "results");
      |                                             [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:240:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  240 |     char *prefix = option_find_str(options, "results", [01;35m[K"results"[m[K);
      |                                                        [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:242:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  242 |     char *mapf = option_find_str(options, [01;35m[K"map"[m[K, 0);
      |                                           [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:258:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  258 |     char *type = option_find_str(options, [01;35m[K"eval"[m[K, "voc");
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:258:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  258 |     char *type = option_find_str(options, "eval", [01;35m[K"voc"[m[K);
      |                                                   [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:264:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  264 |         if(!outfile) outfile = [01;35m[K"coco_results"[m[K;
      |                                [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:270:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  270 |         if(!outfile) outfile = [01;35m[K"imagenet-detection"[m[K;
      |                                [01;35m[K^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:276:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  276 |         if(!outfile) outfile = [01;35m[K"comp4_det_test_"[m[K;
      |                                [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:277:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE**[m[Kâ€™ {aka â€˜[01m[K_IO_FILE**[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  277 |         fps = [01;35m[Kcalloc(classes, sizeof(FILE *))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:292:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  292 |     image *val = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:293:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  293 |     image *val_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:294:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  294 |     image *buf = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:295:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  295 |     image *buf_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:296:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t*[m[Kâ€™ {aka â€˜[01m[Klong unsigned int*[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  296 |     pthread_t *thr = [01;35m[Kcalloc(nthreads, sizeof(pthread_t))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid validate_detector(char*, char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:368:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  368 |     char *valid_images = option_find_str(options, [01;35m[K"valid"[m[K, "data/train.list");
      |                                                   [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:368:60:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  368 |     char *valid_images = option_find_str(options, "valid", [01;35m[K"data/train.list"[m[K);
      |                                                            [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:369:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  369 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, "data/names.list");
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:369:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  369 |     char *name_list = option_find_str(options, "names", [01;35m[K"data/names.list"[m[K);
      |                                                         [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:370:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  370 |     char *prefix = option_find_str(options, [01;35m[K"results"[m[K, "results");
      |                                             [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:370:56:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  370 |     char *prefix = option_find_str(options, "results", [01;35m[K"results"[m[K);
      |                                                        [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:372:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  372 |     char *mapf = option_find_str(options, [01;35m[K"map"[m[K, 0);
      |                                           [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:388:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  388 |     char *type = option_find_str(options, [01;35m[K"eval"[m[K, "voc");
      |                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:388:51:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  388 |     char *type = option_find_str(options, "eval", [01;35m[K"voc"[m[K);
      |                                                   [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:394:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  394 |         if(!outfile) outfile = [01;35m[K"coco_results"[m[K;
      |                                [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:400:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  400 |         if(!outfile) outfile = [01;35m[K"imagenet-detection"[m[K;
      |                                [01;35m[K^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:406:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  406 |         if(!outfile) outfile = [01;35m[K"comp4_det_test_"[m[K;
      |                                [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:407:21:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE**[m[Kâ€™ {aka â€˜[01m[K_IO_FILE**[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  407 |         fps = [01;35m[Kcalloc(classes, sizeof(FILE *))[m[K;
      |               [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                     [01;35m[K|[m[K
      |                     [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:423:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  423 |     image *val = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:424:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  424 |     image *val_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:425:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  425 |     image *buf = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:426:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  426 |     image *buf_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:427:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t*[m[Kâ€™ {aka â€˜[01m[Klong unsigned int*[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  427 |     pthread_t *thr = [01;35m[Kcalloc(nthreads, sizeof(pthread_t))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid validate_detector_recall(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:496:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  496 |     list *plist = get_paths([01;35m[K"data/coco_val_5k.list"[m[K);
      |                             [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:526:28:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  526 |         find_replace(path, [01;35m[K"images"[m[K, "labels", labelpath);
      |                            [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:526:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  526 |         find_replace(path, "images", [01;35m[K"labels"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:527:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  527 |         find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "labels", labelpath);
      |                                 [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:527:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  527 |         find_replace(labelpath, "JPEGImages", [01;35m[K"labels"[m[K, labelpath);
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:528:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  528 |         find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:528:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  528 |         find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:529:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  529 |         find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:529:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  529 |         find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid test_detector(char*, char*, char*, char*, float, float, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:565:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  565 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, "data/names.list");
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:565:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  565 |     char *name_list = option_find_str(options, "names", [01;35m[K"data/names.list"[m[K);
      |                                                         [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:612:25:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  612 |             make_window([01;35m[K"predictions"[m[K, 512, 512, 0);
      |                         [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:[m[K In function â€˜[01m[Kvoid run_detector(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:791:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  791 |     char *prefix = find_char_arg(argc, argv, [01;35m[K"-prefix"[m[K, 0);
      |                                              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:792:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  792 |     float thresh = find_float_arg(argc, argv, [01;35m[K"-thresh"[m[K, .5);
      |                                               [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:793:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  793 |     float hier_thresh = find_float_arg(argc, argv, [01;35m[K"-hier"[m[K, .5);
      |                                                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:794:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  794 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:795:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  795 |     int frame_skip = find_int_arg(argc, argv, [01;35m[K"-s"[m[K, 0);
      |                                               [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:796:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  796 |     int avg = find_int_arg(argc, argv, [01;35m[K"-avg"[m[K, 3);
      |                                        [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:801:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  801 |     char *gpu_list = find_char_arg(argc, argv, [01;35m[K"-gpus"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:802:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  802 |     char *outfile = find_char_arg(argc, argv, [01;35m[K"-out"[m[K, 0);
      |                                               [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:814:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  814 |         gpus = [01;35m[Kcalloc(ngpus, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:825:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  825 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:826:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  826 |     int fullscreen = find_arg(argc, argv, [01;35m[K"-fullscreen"[m[K);
      |                                           [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:827:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  827 |     int width = find_int_arg(argc, argv, [01;35m[K"-w"[m[K, 0);
      |                                          [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:828:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  828 |     int height = find_int_arg(argc, argv, [01;35m[K"-h"[m[K, 0);
      |                                           [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:829:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  829 |     int fps = find_int_arg(argc, argv, [01;35m[K"-fps"[m[K, 0);
      |                                        [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:843:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  843 |         int classes = option_find_int(options, [01;35m[K"classes"[m[K, 20);
      |                                                [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:844:52:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  844 |         char *name_list = option_find_str(options, [01;35m[K"names"[m[K, "data/names.list");
      |                                                    [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/detector.cpp:844:61:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  844 |         char *name_list = option_find_str(options, "names", [01;35m[K"data/names.list"[m[K);
      |                                                             [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[ 86%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp.o[0m
[ 87%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp.o[0m
[ 88%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:[m[K In function â€˜[01m[Kvoid train_isegmenter(char*, char*, char*, int*, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:14:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   14 |     network **nets = [01;35m[Kcalloc(ngpus, sizeof(network*))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:43:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   43 |     char *backup_directory = option_find_str(options, [01;35m[K"backup"[m[K, "/backup/");
      |                                                       [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:43:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   43 |     char *backup_directory = option_find_str(options, "backup", [01;35m[K"/backup/"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:44:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   44 |     char *train_list = option_find_str(options, [01;35m[K"train"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:44:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   44 |     char *train_list = option_find_str(options, "train", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:80:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   80 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:121:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  121 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:[m[K In function â€˜[01m[Kvoid run_isegmenter(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:232:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  232 |     char *gpu_list = find_char_arg(argc, argv, [01;35m[K"-gpus"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:244:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  244 |         gpus = [01;35m[Kcalloc(ngpus, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:255:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  255 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:256:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  256 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/instance_segmenter.cpp:257:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  257 |     int display = find_arg(argc, argv, [01;35m[K"-display"[m[K);
      |                                        [01;35m[K^~~~~~~~~~[m[K
[ 89%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid train_prog(char*, char*, char*, char*, int, int, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:519:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  519 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:547:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  547 |     char *ls[2] = {[01;35m[K"imagenet"[m[K, "zzzzzzzz"};
      |                    [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:547:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  547 |     char *ls[2] = {"imagenet", [01;35m[K"zzzzzzzz"[m[K};
      |                                [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:563:36:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  563 |     while ([01;35m[Kget_current_batch(gnet) < maxbatch[m[K) {
      |            [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid train_dcgan(char*, char*, char*, char*, int, int, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:675:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  675 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:685:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  685 |     layer imlayer = {[01;35m[K0[m[K};
      |                      [01;35m[K^[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:711:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  711 |     char *ls[2] = {[01;35m[K"imagenet"[m[K, "zzzzzzzz"};
      |                    [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:711:32:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  711 |     char *ls[2] = {"imagenet", [01;35m[K"zzzzzzzz"[m[K};
      |                                [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:731:36:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  731 |     while ([01;35m[Kget_current_batch(gnet) < maxbatch[m[K) {
      |            [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid train_colorizer(char*, char*, char*, char*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:871:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  871 |     char *train_images = [01;35m[K"/home/pjreddie/data/imagenet/imagenet1k.train.list"[m[K;
      |                          [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:872:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  872 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:881:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[KLAYER_TYPE[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  881 |     layer imlayer = {[01;35m[K0[m[K};
      |                      [01;35m[K^[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kint[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:907:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  907 |     char *ls[2] = {[01;35m[K"imagenet"[m[K};
      |                    [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:917:25:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  917 |     float *pixs = [01;35m[Kcalloc(x_size, sizeof(float))[m[K;
      |                   [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                         [01;35m[K|[m[K
      |                         [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:918:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  918 |     float *graypixs = [01;35m[Kcalloc(x_size, sizeof(float))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:932:35:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  932 |     while ([01;35m[Kget_current_batch(net) < net->max_batches[m[K) {
      |            [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:[m[K In function â€˜[01m[Kvoid run_lsd(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1354:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1354 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1355:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1355 |     int display = find_arg(argc, argv, [01;35m[K"-display"[m[K);
      |                                        [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1356:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1356 |     int batches = find_int_arg(argc, argv, [01;35m[K"-b"[m[K, 0);
      |                                            [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1357:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1357 |     char *file = find_char_arg(argc, argv, [01;35m[K"-file"[m[K, "/home/pjreddie/data/imagenet/imagenet1k.train.list");
      |                                            [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/lsd.cpp:1357:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
 1357 |     char *file = find_char_arg(argc, argv, "-file", [01;35m[K"/home/pjreddie/data/imagenet/imagenet1k.train.list"[m[K);
      |                                                     [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:[m[K In function â€˜[01m[Kvoid run_nightmare(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:301:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  301 |     int range = find_int_arg(argc, argv, [01;35m[K"-range"[m[K, 1);
      |                                          [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:302:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  302 |     int norm = find_int_arg(argc, argv, [01;35m[K"-norm"[m[K, 1);
      |                                         [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:303:43:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  303 |     int rounds = find_int_arg(argc, argv, [01;35m[K"-rounds"[m[K, 1);
      |                                           [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:304:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  304 |     int iters = find_int_arg(argc, argv, [01;35m[K"-iters"[m[K, 10);
      |                                          [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:305:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  305 |     int octaves = find_int_arg(argc, argv, [01;35m[K"-octaves"[m[K, 4);
      |                                            [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:306:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  306 |     float zoom = find_float_arg(argc, argv, [01;35m[K"-zoom"[m[K, 1.);
      |                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:307:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  307 |     float rate = find_float_arg(argc, argv, [01;35m[K"-rate"[m[K, .04);
      |                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:308:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  308 |     float thresh = find_float_arg(argc, argv, [01;35m[K"-thresh"[m[K, 1.);
      |                                               [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:309:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  309 |     float rotate = find_float_arg(argc, argv, [01;35m[K"-rotate"[m[K, 0);
      |                                               [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:310:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  310 |     float momentum = find_float_arg(argc, argv, [01;35m[K"-momentum"[m[K, .9);
      |                                                 [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:311:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  311 |     float lambda = find_float_arg(argc, argv, [01;35m[K"-lambda"[m[K, .01);
      |                                               [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:312:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  312 |     char *prefix = find_char_arg(argc, argv, [01;35m[K"-prefix"[m[K, 0);
      |                                              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:313:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  313 |     int reconstruct = find_arg(argc, argv, [01;35m[K"-reconstruct"[m[K);
      |                                            [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/nightmare.cpp:314:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  314 |     int smooth_size = find_int_arg(argc, argv, [01;35m[K"-smooth"[m[K, 1);
      |                                                [01;35m[K^~~~~~~~~[m[K
[ 91%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:[m[K In function â€˜[01m[Kvoid train_regressor(char*, char*, char*, int*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:13:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   13 |     network **nets = [01;35m[Kcalloc(ngpus, sizeof(network*))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:33:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   33 |     char *backup_directory = option_find_str(options, [01;35m[K"backup"[m[K, "/backup/");
      |                                                       [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:33:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   33 |     char *backup_directory = option_find_str(options, "backup", [01;35m[K"/backup/"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:34:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   34 |     char *train_list = option_find_str(options, [01;35m[K"train"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:34:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   34 |     char *train_list = option_find_str(options, "train", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:35:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   35 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 1);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:70:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   70 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:94:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   94 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:[m[K In function â€˜[01m[Kvoid demo_regressor(char*, char*, char*, int, const char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:159:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  159 |     int classes = option_find_int(options, [01;35m[K"classes"[m[K, 1);
      |                                            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:160:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  160 |     char *name_list = option_find_str(options, [01;35m[K"names"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:[m[K In function â€˜[01m[Kvoid run_regressor(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:206:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  206 |     char *gpu_list = find_char_arg(argc, argv, [01;35m[K"-gpus"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:218:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  218 |         gpus = [01;35m[Kcalloc(ngpus, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:229:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  229 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/regressor.cpp:230:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  230 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[ 92%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp.o[0m
[ 93%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/super.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kunsigned char** load_files(char*, int*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:14:38:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kunsigned char**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   14 |     unsigned char **contents = [01;35m[Kcalloc(*n, sizeof(char *))[m[K;
      |                                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                                      [01;35m[K|[m[K
      |                                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kint* read_tokenized_data(char*, size_t*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:29:20:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   29 |     int *d = [01;35m[Kcalloc(size, sizeof(int))[m[K;
      |              [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                    [01;35m[K|[m[K
      |                    [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:36:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   36 |             d = [01;35m[Krealloc(d, size*sizeof(int))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:42:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   42 |     d = [01;35m[Krealloc(d, count*sizeof(int))[m[K;
      |         [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kchar** read_tokens(char*, size_t*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:52:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   52 |     char **d = [01;35m[Kcalloc(size, sizeof(char *))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:58:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   58 |             d = [01;35m[Krealloc(d, size*sizeof(char *))[m[K;
      |                 [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:60:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   60 |         if(0==strcmp(line, "<NEWLINE>")) line = [01;35m[K"\n"[m[K;
      |                                                 [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:64:16:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kchar**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   64 |     d = [01;35m[Krealloc(d, count*sizeof(char *))[m[K;
      |         [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                [01;35m[K|[m[K
      |                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kfloat_pair get_rnn_token_data(int*, size_t*, int, size_t, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:72:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   72 |     float *x = [01;35m[Kcalloc(batch * steps * characters, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:73:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   73 |     float *y = [01;35m[Kcalloc(batch * steps * characters, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kfloat_pair get_seq2seq_data(char**, char**, int, int, size_t, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:99:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   99 |     float *x = [01;35m[Kcalloc(batch * steps * characters, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:100:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  100 |     float *y = [01;35m[Kcalloc(batch * steps * characters, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kfloat_pair get_rnn_data(unsigned char*, size_t*, int, size_t, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:129:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  129 |     float *x = [01;35m[Kcalloc(batch * steps * characters, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:130:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  130 |     float *y = [01;35m[Kcalloc(batch * steps * characters, sizeof(float))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid train_char_rnn(char*, char*, char*, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:170:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  170 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:184:29:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Ksize_t*[m[Kâ€™ {aka â€˜[01m[Klong unsigned int*[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  184 |     size_t *offsets = [01;35m[Kcalloc(streams, sizeof(size_t))[m[K;
      |                       [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                             [01;35m[K|[m[K
      |                             [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:191:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  191 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid test_char_rnn(char*, char*, int, char*, float, int, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:264:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  264 |     float *input = [01;35m[Kcalloc(inputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid test_tactic_rnn_multi(char*, char*, int, float, int, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:317:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  317 |     float *input = [01;35m[Kcalloc(inputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid test_tactic_rnn(char*, char*, int, float, int, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:362:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  362 |     float *input = [01;35m[Kcalloc(inputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid valid_tactic_rnn(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:398:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  398 |     float *input = [01;35m[Kcalloc(inputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid valid_char_rnn(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:447:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  447 |     float *input = [01;35m[Kcalloc(inputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid vec_char_rnn(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:483:26:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  483 |     float *input = [01;35m[Kcalloc(inputs, sizeof(float))[m[K;
      |                    [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                          [01;35m[K|[m[K
      |                          [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:[m[K In function â€˜[01m[Kvoid run_char_rnn(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:525:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  525 |     char *filename = find_char_arg(argc, argv, [01;35m[K"-file"[m[K, "data/shakespeare.txt");
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:525:57:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  525 |     char *filename = find_char_arg(argc, argv, "-file", [01;35m[K"data/shakespeare.txt"[m[K);
      |                                                         [01;35m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:526:44:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  526 |     char *seed = find_char_arg(argc, argv, [01;35m[K"-seed"[m[K, "\n\n");
      |                                            [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:526:53:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  526 |     char *seed = find_char_arg(argc, argv, "-seed", [01;35m[K"\n\n"[m[K);
      |                                                     [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:527:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  527 |     int len = find_int_arg(argc, argv, [01;35m[K"-len"[m[K, 1000);
      |                                        [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:528:45:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  528 |     float temp = find_float_arg(argc, argv, [01;35m[K"-temp"[m[K, .7);
      |                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:529:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  529 |     int rseed = find_int_arg(argc, argv, [01;35m[K"-srand"[m[K, time(0));
      |                                          [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:530:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  530 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:531:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  531 |     int tokenized = find_arg(argc, argv, [01;35m[K"-tokenized"[m[K);
      |                                          [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/rnn.cpp:532:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  532 |     char *tokens = find_char_arg(argc, argv, [01;35m[K"-tokens"[m[K, 0);
      |                                              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:[m[K In function â€˜[01m[Kvoid train_segmenter(char*, char*, char*, int*, int, int, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:13:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Knetwork**[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
   13 |     network **nets = [01;35m[Kcalloc(ngpus, sizeof(network*))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:38:55:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   38 |     char *backup_directory = option_find_str(options, [01;35m[K"backup"[m[K, "/backup/");
      |                                                       [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:38:65:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   38 |     char *backup_directory = option_find_str(options, "backup", [01;35m[K"/backup/"[m[K);
      |                                                                 [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:39:49:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   39 |     char *train_list = option_find_str(options, [01;35m[K"train"[m[K, "data/train.list");
      |                                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:39:58:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   39 |     char *train_list = option_find_str(options, "train", [01;35m[K"data/train.list"[m[K);
      |                                                          [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:74:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   74 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:109:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  109 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:[m[K In function â€˜[01m[Kvoid run_segmenter(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:220:48:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  220 |     char *gpu_list = find_char_arg(argc, argv, [01;35m[K"-gpus"[m[K, 0);
      |                                                [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:232:22:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kint*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  232 |         gpus = [01;35m[Kcalloc(ngpus, sizeof(int))[m[K;
      |                [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
      |                      [01;35m[K|[m[K
      |                      [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:243:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  243 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:244:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  244 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/segmenter.cpp:245:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  245 |     int display = find_arg(argc, argv, [01;35m[K"-display"[m[K);
      |                                        [01;35m[K^~~~~~~~~~[m[K
[ 94%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:[m[K In function â€˜[01m[Kvoid train_super(char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:5:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    5 |     char *train_images = [01;35m[K"/data/imagenet/imagenet1k.train.list"[m[K;
      |                          [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:6:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    6 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:35:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   35 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:[m[K In function â€˜[01m[Kvoid run_super(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/super.cpp:114:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  114 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[ 96%] [32mBuilding CXX object CMakeFiles/darknet_ros_lib.dir/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp.o[0m
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:[m[K In function â€˜[01m[Kvoid train_tag(char*, char*, int)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:8:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    8 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:13:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   13 |     list *plist = get_paths([01;35m[K"/home/pjreddie/tag/train.list"[m[K);
      |                             [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:46:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   46 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K || net->max_batches == 0){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:59:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   59 |         if([01;35m[K*net->seen/N > epoch[m[K){
      |            [01;35m[K~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:[m[K In function â€˜[01m[Kvoid test_tag(char*, char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:89:31:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
   89 |     char **names = get_labels([01;35m[K"data/tags.txt"[m[K);
      |                               [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:[m[K In function â€˜[01m[Kvoid run_tag(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/tag.cpp:133:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  133 |     int clear = find_arg(argc, argv, [01;35m[K"-clear"[m[K);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:22:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {[01;35m[K"aeroplane"[m[K, "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                      [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:35:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", [01;35m[K"bicycle"[m[K, "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                   [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", [01;35m[K"bird"[m[K, "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                              [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:54:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", [01;35m[K"boat"[m[K, "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                      [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:62:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", [01;35m[K"bottle"[m[K, "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                              [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:72:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", [01;35m[K"bus"[m[K, "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                        [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:79:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", [01;35m[K"car"[m[K, "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                               [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:86:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", [01;35m[K"cat"[m[K, "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                      [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:93:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", [01;35m[K"chair"[m[K, "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                             [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:102:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", [01;35m[K"cow"[m[K, "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                                      [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:109:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", [01;35m[K"diningtable"[m[K, "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                                             [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:124:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", [01;35m[K"dog"[m[K, "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                                                            [01;35m[K^~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:131:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", [01;35m[K"horse"[m[K, "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                                                                   [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:140:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", [01;35m[K"motorbike"[m[K, "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                                                                            [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:153:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", [01;35m[K"person"[m[K, "pottedplant", "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                                                                                         [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:163:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", [01;35m[K"pottedplant"[m[K, "sheep", "sofa", "train", "tvmonitor"};
      |                                                                                                                                                                   [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:178:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", [01;35m[K"sheep"[m[K, "sofa", "train", "tvmonitor"};
      |                                                                                                                                                                                  [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:187:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", [01;35m[K"sofa"[m[K, "train", "tvmonitor"};
      |                                                                                                                                                                                           [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:195:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", [01;35m[K"train"[m[K, "tvmonitor"};
      |                                                                                                                                                                                                   [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:3:204:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    3 | char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", [01;35m[K"tvmonitor"[m[K};
      |                                                                                                                                                                                                            [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid train_yolo(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:7:26:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    7 |     char *train_images = [01;35m[K"/data/voc/train.txt"[m[K;
      |                          [01;35m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:8:30:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
    8 |     char *backup_directory = [01;35m[K"/home/pjreddie/backup/"[m[K;
      |                              [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:50:34:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   50 |     while([01;35m[Kget_current_batch(net) < net->max_batches[m[K){
      |           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid validate_yolo(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:105:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  105 |     char *base = [01;35m[K"results/comp4_det_test_"[m[K;
      |                  [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:107:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  107 |     list *plist = get_paths([01;35m[K"/home/pjreddie/data/voc/2007_test.txt"[m[K);
      |                             [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:115:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE**[m[Kâ€™ {aka â€˜[01m[K_IO_FILE**[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  115 |     FILE **fps = [01;35m[Kcalloc(classes, sizeof(FILE *))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:131:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  131 |     image *val = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:132:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  132 |     image *val_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:133:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  133 |     image *buf = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:134:32:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kimage*[m[Kâ€™ [[01;35m[K-fpermissive[m[K]
  134 |     image *buf_resized = [01;35m[Kcalloc(nthreads, sizeof(image))[m[K;
      |                          [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                [01;35m[K|[m[K
      |                                [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:135:28:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[Kpthread_t*[m[Kâ€™ {aka â€˜[01m[Klong unsigned int*[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  135 |     pthread_t *thr = [01;35m[Kcalloc(nthreads, sizeof(pthread_t))[m[K;
      |                      [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                            [01;35m[K|[m[K
      |                            [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid validate_yolo_recall(char*, char*)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:189:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  189 |     char *base = [01;35m[K"results/comp4_det_test_"[m[K;
      |                  [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:190:29:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  190 |     list *plist = get_paths([01;35m[K"data/voc.2007.test"[m[K);
      |                             [01;35m[K^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:198:24:[m[K [01;35m[Kwarning: [m[Kinvalid conversion from â€˜[01m[Kvoid*[m[Kâ€™ to â€˜[01m[KFILE**[m[Kâ€™ {aka â€˜[01m[K_IO_FILE**[m[Kâ€™} [[01;35m[K-fpermissive[m[K]
  198 |     FILE **fps = [01;35m[Kcalloc(classes, sizeof(FILE *))[m[K;
      |                  [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                        [01;35m[K|[m[K
      |                        [01;35m[Kvoid*[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:229:28:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  229 |         find_replace(path, [01;35m[K"images"[m[K, "labels", labelpath);
      |                            [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:229:38:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  229 |         find_replace(path, "images", [01;35m[K"labels"[m[K, labelpath);
      |                                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:230:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  230 |         find_replace(labelpath, [01;35m[K"JPEGImages"[m[K, "labels", labelpath);
      |                                 [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:230:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  230 |         find_replace(labelpath, "JPEGImages", [01;35m[K"labels"[m[K, labelpath);
      |                                               [01;35m[K^~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:231:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  231 |         find_replace(labelpath, [01;35m[K".jpg"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:231:41:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  231 |         find_replace(labelpath, ".jpg", [01;35m[K".txt"[m[K, labelpath);
      |                                         [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:232:33:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  232 |         find_replace(labelpath, [01;35m[K".JPEG"[m[K, ".txt", labelpath);
      |                                 [01;35m[K^~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:232:42:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  232 |         find_replace(labelpath, ".JPEG", [01;35m[K".txt"[m[K, labelpath);
      |                                          [01;35m[K^~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:[m[K In function â€˜[01m[Kvoid run_yolo(int, char**)[m[Kâ€™:
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:309:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  309 |     char *prefix = find_char_arg(argc, argv, [01;35m[K"-prefix"[m[K, 0);
      |                                              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:310:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  310 |     float thresh = find_float_arg(argc, argv, [01;35m[K"-thresh"[m[K, .2);
      |                                               [01;35m[K^~~~~~~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:311:46:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  311 |     int cam_index = find_int_arg(argc, argv, [01;35m[K"-c"[m[K, 0);
      |                                              [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:312:47:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  312 |     int frame_skip = find_int_arg(argc, argv, [01;35m[K"-s"[m[K, 0);
      |                                               [01;35m[K^~~~[m[K
[01m[K/home/sjchang/catkin_ws/src/darknet_ros/darknet/examples/yolo.cpp:318:40:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
  318 |     int avg = find_int_arg(argc, argv, [01;35m[K"-avg"[m[K, 1);
      |                                        [01;35m[K^~~~~~[m[K
[ 97%] [32m[1mLinking CXX shared library /home/sjchang/catkin_ws/devel/.private/darknet_ros/lib/libdarknet_ros_lib.so[0m
[ 97%] Built target darknet_ros_lib
[35m[1mScanning dependencies of target darknet_ros[0m
[ 98%] [32mBuilding CXX object CMakeFiles/darknet_ros.dir/src/yolo_object_detector_node.cpp.o[0m
[100%] [32m[1mLinking CXX executable /home/sjchang/catkin_ws/devel/.private/darknet_ros/lib/darknet_ros/darknet_ros[0m
[100%] Built target darknet_ros
